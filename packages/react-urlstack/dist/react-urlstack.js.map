{"version":3,"file":"react-urlstack.js","sources":["../src/utils/utils.js","../src/defaultTransitions/tabTransition.js","../src/utils/animatedStyles.js","../src/utils/wrapperContext.js","../src/ScreenContent.js","../src/ScreenWrapper.js","../src/TransitionElement.js","../src/utils/sharedElementContext.js","../src/ScreenStack.js","../src/ModalWrapper.js","../src/DrawerWrapper.js","../src/defaultTransitions/desktopTransition.js","../src/defaultTransitions/mobileTransition.js","../src/defaultTransitions/modalTransition.js","../src/Navigator.js","../src/SharedElement.js"],"sourcesContent":["export function memoize( fn ){\n\tvar args, value;\n\n\tfunction recalculate( fnArgs ){\n\t\targs = fnArgs\n\t\tvalue = fn.apply( null, fnArgs )\n\t\treturn value;\n\t}\n\n\treturn function memoized(){\n\t\tif( !args || args.length !== arguments.length ){\n\t\t\treturn recalculate( arguments )\n\t\t}\n\n\t\tlet i = 0;\n\t\twhile( i < args.length ){\n\t\t\tif( args[i] !== arguments[i] ){\n\t\t\t\treturn recalculate( arguments )\n\t\t\t}\n\t\t\ti++\n\t\t}\n\n\t\treturn value\n\t}\n}\n\nexport function createId(){\n  return Math.round( Math.random() * 10000000 ).toString(36);\n}\n\nexport function nofn(){}\n\nexport function bind( that, methods ){\n\tmethods.forEach( m => {\n\t\tthat[m] = that[m].bind(that)\n\t})\n}\n","import { Easing } from 'react-native'\n\nexport default {\n\tstyles: function tabDefaultTransition( indexes, layout ) {\n\t\tlet scroll = layout.width / 2\n\t\treturn {\n\t\t\ttranslateX: {\n\t\t\t\tinputRange: [-2, -1, 0, 1, 2],\n\t\t\t\toutputRange: [scroll, scroll, 0, -scroll, -scroll]\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tinputRange: [-2, -1, 0, .8, 1],\n\t\t\t\toutputRange: [0, 0, 1, 0, 0]\n\t\t\t},\n\t\t}\n\t},\n\teasing: Easing.linear,\n\tduration: 300\n}","import { Animated } from 'react-native';\n\nexport function animatedStyles( transition, indexes, layout ){\n\tlet styles = typeof transition.styles === 'function' ? transition.styles( indexes, layout ) : transition.styles;\n\tif( !styles ){\n\t\tstyles = {}\n\t}\n\n\tlet animatedStyles = {}\n\tlet transformStyles = []\n\n\tif( indexes.count ){\n\t\tanimatedStyles.zIndex = indexes.count - Math.abs(indexes.relative)\n\t}\n\n\tObject.keys( styles ).forEach( key => {\n\t\tlet value = styles[key];\n\n\t\tif( styleKeys[key] ){\n\t\t\tif( warnKeys[key] ){\n\t\t\t\tconsole.warn(`react-urlstack: It's possible in web, but react-native won't animate the property \"${key}\"`)\n\t\t\t}\n\t\t\tif( value && value.inputRange ){\n\t\t\t\tanimatedStyles[ key ] = indexes.transition.interpolate( value )\n\t\t\t}\n\t\t\telse {\n\t\t\t\tanimatedStyles[ key ] = value\n\t\t\t}\n\t\t}\n\t\telse if( transformKeys[key] ){\n\t\t\t// Check values\n\t\t\tlet type = transformKeys[key];\n\t\t\tlet warned = false;\n\t\t\tif( value && value.outputRange ){\n\t\t\t\tstyles[key].outputRange.forEach( value =>{\n\t\t\t\t\tif( !warned && typeof value !== type ){\n\t\t\t\t\t\twarned = true;\n\t\t\t\t\t\tconsole.warn(`react-urlstack: Even if it works in web, react-native only accepts type \"${transformKeys[key]}\" for \"${key}\". Given \"${ value }\".`);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\ttransformStyles.push({\n\t\t\t\t\t[key]: indexes.transition.interpolate( value )\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttransformStyles.push({\n\t\t\t\t\t[key]: value\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn(`react-urlstack: Unknown property to animate \"${key}\"`)\n\t\t}\n\t})\n\n\tif( transformStyles.length ){\n\t\tanimatedStyles.transform = transformStyles\n\t}\n\n\treturn animatedStyles\n}\n\n\nlet styleKeys = {};\nlet warnKeys = {};\n['left', 'right', 'top', 'bottom'].forEach( key => {\n\tstyleKeys[key] = 1;\n\twarnKeys[key] = 1;\n});\n['width', 'height', 'opacity', 'backgroundColor', 'borderRadius'].forEach( key => {\n\tstyleKeys[key] = 1 \n})\n\nlet n = 'number', s = 'string';\nlet transformKeys = {\n\tperspective: n,\n\trotate: s, rotateX: s, rotateY: s, rotateZ: s,\n\tscale: n, scaleX: n, scaleY: n,\n\ttranslateX: n, translateY: n,\n\tskeyX: s, skewY: s\n};\n\n\nexport function stagger( animatedValue, gap, times, styles ){\n\tlet follower = new Animated.Value( animatedValue._value );\n\tAnimated.timing( follower, {duration: 0, toValue: animatedValue} ).start();\n\t\n\tlet stagged = [ animatedStyles({styles}, {transition: follower}) ];\n\n\tfor( let i = 1; i < times; i++ ){\n\t\tlet stage = {};\n\t\tObject.keys( styles ).forEach( attr => {\n\t\t\tlet val = styles[attr];\n\t\t\tif( val && val.inputRange ){\n\t\t\t\tlet shifted = {\n\t\t\t\t\tinputRange: [],\n\t\t\t\t\toutputRange: val.outputRange\n\t\t\t\t}\n\t\t\t\tval.inputRange.forEach( inputValue => {\n\t\t\t\t\tshifted.inputRange.push( inputValue + (i * gap) )\n\t\t\t\t})\n\t\t\t\tstage[attr] = shifted;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstage[attr] = val;\n\t\t\t}\n\t\t})\n\n\t\tlet animated = animatedStyles({styles: stage}, {transition: follower});\n\t\tstagged.push( animated );\n\t}\n\n\treturn stagged;\n}","import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context;","import React, { Component } from 'react'\r\n\r\nexport default class ScreenContent extends Component {\r\n\trender() {\r\n\t\treturn this.props.renderScreen();\r\n\t}\r\n\r\n\tshouldComponentUpdate(){\r\n\t\treturn !this.props.animating;\r\n\t}\r\n}\r\n","import React, {Component, createRef} from 'react'\nimport { StyleSheet, Animated } from 'react-native'\nimport tabTransition from './defaultTransitions/tabTransition'\nimport {animatedStyles} from './utils/animatedStyles'\nimport Context from './utils/wrapperContext'\nimport {createId, nofn} from './utils/utils'\nimport ScreenContent from './ScreenContent'\n\nexport default class ScreenWrapper extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.id = createId()\n\n\t\tthis.screenRef = createRef()\n\n\t\tthis.setAnimatedLayout( props.indexes, props.layout )\n\t}\n\n\tstatic defaultProps ={\n\t\tonReady: nofn,\n\t\tonUnmount: nofn\n\t}\n\n\trender(){\n\t\tlet item = this.props.item\n\t\tlet containerStyles = [\n\t\t\tstyles.container,\n\t\t\tthis.animatedStyles\n\t\t]\n\t\tlet contextValue = {\n\t\t\ttransition: this.props.transition,\n\t\t\tindexes: this.props.indexes,\n\t\t\tid: item.key\n\t\t}\n\n\t\treturn (\n\t\t\t<Animated.View style={ containerStyles } onLayout={ () => this.props.onReady( item.key ) }>\n\t\t\t\t<Context.Provider value={contextValue}>\n\t\t\t\t\t<ScreenContent renderScreen={ this._renderScreen } animating={ this.props.animating } />\n\t\t\t\t</Context.Provider>\n\t\t\t</Animated.View>\n\t\t)\n\t}\n\n\t_renderScreen = () => {\n\t\tlet { item, ScreenStack, router, transition, indexes, layout, drawer, breakPoint, navProps } = this.props;\n\t\tlet { Screen, location } = item;\n\t\tlet ref = Screen.prototype instanceof Component ? this.screenRef : undefined;\n\n\t\tif( item.isTabs ){\n\t\t\treturn (\n\t\t\t\t<Screen router={router}\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tlocation={location}\n\t\t\t\t\tindexes={indexes}\n\t\t\t\t\tlayout={layout}\n\t\t\t\t\tdrawer= { drawer }\n\t\t\t\t\tbreakPoint={ breakPoint }\n\t\t\t\t\t{ ...navProps } >\n\t\t\t\t\t<ScreenStack router={ router }\n\t\t\t\t\t\tisTabs={ true }\n\t\t\t\t\t\tscreenTransition={ transition.tabTransition || tabTransition }\n\t\t\t\t\t\tstack={ item.tabs.stack }\n\t\t\t\t\t\tindex={ item.tabs.activeIndex }\n\t\t\t\t\t\tparentIndexes={ indexes }\n\t\t\t\t\t\tlayout={ layout }\n\t\t\t\t\t\tbreakPoint={breakPoint}\n\t\t\t\t\t\tdrawer={drawer}\n\t\t\t\t\t\tnavProps={ navProps } />\n\t\t\t\t</Screen>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<Screen router={router}\n\t\t\t\tref={ ref }\n\t\t\t\tlocation={location}\n\t\t\t\tindexes={indexes}\n\t\t\t\tlayout={layout}\n\t\t\t\tdrawer= { drawer }\n\t\t\t\tbreakPoint={ breakPoint }\n\t\t\t\t{...navProps} />\n\t\t)\n\t}\n\t\n\tsetAnimatedLayout( indexes, layout ){\n\t\tlet transition = this.props.transition;\n\t\tthis.animatedStyles = transition ? animatedStyles( transition, indexes, layout ) : {};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.hasLayoutChanged(prevProps)) {\n\t\t\tthis.setAnimatedLayout(this.props.indexes, this.props.layout);\n\t\t}\n\t}\n\n\thasLayoutChanged(prevProps) {\n\t\tif (!this.props.indexes) return;\n\n\t\tlet { width } = prevProps.layout;\n\t\tlet { screen, relative } = prevProps.indexes;\n\t\tlet { layout, indexes } = this.props;\n\n\t\treturn (\n\t\t\twidth !== layout.width ||\n\t\t\tscreen !== indexes.screen ||\n\t\t\trelative !== indexes.relative ||\n\t\t\tthis.props.transition !== prevProps.transition\n\t\t);\n\t}\n\n\tcomponentWillUnmount(){\n\t\tif( this.props.isShowing && this.props.indexes.relative === 0 ){\n\t\t\tthis.triggerCycleMethod('componentWillLeave')\n\t\t}\n\t\tthis.props.onUnmount( this.props.item.key )\n\t}\n\n\tcomponentDidMount(){\n\t\tif( this.props.isShowing && this.props.indexes.relative === 0 ){\n\t\t\tthis.triggerCycleMethod('componentWillEnter')\n\t\t}\n\t}\n\n\tcomponentWillEnter(){\n\t\tthis.triggerCycleMethod('componentWillEnter')\n\t}\n\n\tcomponentWillLeave(){\n\t\tthis.triggerCycleMethod('componentWillLeave')\n\t}\n\n\ttriggerCycleMethod( method ){\n\t\tlet ref = this.screenRef;\n\t\tif( ref && ref.current && ref.current[method] && this.lastLFMethod !== method){\n\t\t\tref.current[method]();\n\t\t}\n\t\tthis.lastLFMethod = method;\n\t}\n}\n\nlet styles = StyleSheet.create({\n\tcontainer: {\n\t\toverflow: 'hidden',\n\t\tposition: 'absolute',\n\t\ttop: 0, left: 0, bottom: 0, right: 0,\n\t\tzIndex:10\n\t}\n})","import React, { Component } from 'react';\nimport { Animated, StyleSheet, Platform } from 'react-native';\nimport {animatedStyles} from './utils/animatedStyles';\nimport PropTypes from 'prop-types'\n\nconst isWeb = Platform.OS === 'web';\nconst defaultDuration = 500;\n\nexport default class TransitionElement extends Component {\n\tstatic propTypes = {\n\t\t/** The entering props and box */\n\t\tentering: PropTypes.object, // {props, box}\n\t\t/** The leaving props and box */\n\t\tleaving: PropTypes.object, // {props, box}\n\t\t/** The breakpoint width from the navigator */\n\t\tbreakPoint: PropTypes.number,\n\t\t/** Screen indexes involved in the transition. If no transitionState is given in the SharedElement props, these values will be used as start and end points for  */\n\t\tscreenIndexes: PropTypes.object // {entering, leaving}\n\t}\n\n\tconstructor( props ){\n\t\tsuper(props);\n\n\t\tthis.indexes = this.getIndexes();\n\t\tthis.animatedValue = new Animated.Value( this.indexes.leaving );\n\t\tthis.transition = this.getTransition();\n\t}\n\n\trender(){\n\t\t// If the styles returned false, we don't want the transition \n\t\tif( this.transition === false ){\n\t\t\treturn null;\n\t\t}\n\n\t\tlet transitionStyles = [\n\t\t\tstyles.container,\n\t\t\tthis.props.leaving.props.style,\n\t\t\tanimatedStyles( this.transition, {transition: this.animatedValue} )\n\t\t]\n\t\t\n\t\treturn (\n\t\t\t<Animated.View style={ transitionStyles } pointerEvents=\"auto\">\n\t\t\t\t{ this.renderChildren() }\n\t\t\t</Animated.View>\n\t\t)\n\t}\n\n\trenderChildren(){\n\t\tlet props = this.props;\n\t\tlet customRenderer = props.leaving.props.transitionRender;\n\n\t\tif( customRenderer ){\n\t\t\treturn customRenderer({\n\t\t\t\tanimatedValue: this.animatedValue,\n\t\t\t\tbreakPoint: props.breakPoint,\n\t\t\t\tentering: props.entering,\n\t\t\t\tleaving: props.leaving\n\t\t\t})\n\t\t}\n\n\t\treturn props.leaving.props.children;\n\t}\n\n\tgetTransition(){\n\t\tlet transitionStyle = this.props.leaving.props.transition;\n\t\tlet defaultTransition = this.getDefaultTransition()\n\n\t\tlet transition\n\t\t\n\t\tif( typeof transitionStyle === 'function' ){\n\t\t\tlet props = this.props\n\t\t\ttransition = transitionStyle( {\n\t\t\t\tbreakPoint: props.breakPoint,\n\t\t\t\tentering: props.entering,\n\t\t\t\tleaving: props.leaving,\n\t\t\t\tdefaultTransition: { ...defaultTransition }\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\ttransition = transitionStyle;\n\t\t}\n\n\t\tif( transition === false ){\n\t\t\treturn false;\n\t\t}\n\t\telse if( transition === undefined ){\n\t\t\treturn defaultTransition\n\t\t}\n\n\t\t// Let's fill the gaps in the transitions\n\t\tif( !transition.duration ){\n\t\t\ttransition.duration = defaultTransition.duration;\n\t\t}\n\t\t\n\t\tlet styles = transition.styles;\n\t\tlet defaultStyles = defaultTransition.styles;\n\n\t\tif( !styles ){\n\t\t\tstyles = {}\n\t\t\ttransition.style = styles\n\t\t}\n\n\t\tObject.keys(defaultStyles).forEach(key => {\n\t\t\tif (styles[key] === undefined) {\n\t\t\t\tstyles[key] = defaultStyles[key]\n\t\t\t}\n\t\t})\n\n\t\treturn transition;\n\t}\n\n\tgetIndexes(){\n\t\treturn {\n\t\t\tentering: this.props.entering.props.transitionState || this.props.screenIndexes.entering,\n\t\t\tleaving: this.props.leaving.props.transitionState || this.props.screenIndexes.leaving,\n\t\t}\n\t}\n\n\t// The default transition is just a translation\n\tgetDefaultTransition(){\n\t\tlet {leaving, entering} = this.indexes;\n\t\tlet leavingBox = this.props.leaving.box;\n\t\tlet enteringBox = this.props.entering.box;\n\t\tlet leavingTransition = this.props.leavingTransition\n\n\t\treturn {\n\t\t\tstyles: {\n\t\t\t\twidth: this.getInterpolation( leaving, entering, leavingBox.width, enteringBox.width ),\n\t\t\t\theight: this.getInterpolation( leaving, entering, leavingBox.height, enteringBox.height ),\n\t\t\t\ttranslateX: this.getInterpolation( leaving, entering, leavingBox.x, enteringBox.x ),\n\t\t\t\ttranslateY: this.getInterpolation( leaving, entering, leavingBox.y, enteringBox.y ),\n\t\t\t},\n\t\t\tduration: (leavingTransition && leavingTransition.duration) || defaultDuration\n\t\t}\n\t}\n\n\tgetInterpolation( fromIndex, toIndex, fromValue, toValue ){\n\t\tif( fromValue === toValue ) return fromValue;\n\t\tlet inverted = fromIndex > toIndex;\n\t\treturn {\n\t\t\tinputRange: inverted ? [ toIndex, fromIndex ] : [ fromIndex, toIndex ],\n\t\t\toutputRange: inverted ? [ toValue, fromValue ] : [ fromValue, toValue ]\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tif( this.transition !== false ){\n\t\t\t// Start the animation\n\t\t\tAnimated.timing( this.animatedValue, {\n\t\t\t\ttoValue: this.indexes.entering,\n\t\t\t\tduration: this.transition.duration || defaultDuration,\n\t\t\t\t// useNativeDriver: !isWeb // Native driver is not animating width and height\n\t\t\t}).start( () => this.props.onTransitionEnd() );\n\t\t}\n\t}\n}\n\n\nconst styles = StyleSheet.create({\n\tcontainer: { position: 'absolute', overflow: 'hidden', top: 0, left: 0 }\n})","import React, {Component} from 'react'\nimport TransitionElement from '../TransitionElement'\nimport {View, StyleSheet} from 'react-native'\nimport {createId} from './utils'\n\nconst Context = React.createContext('sharedElement');\n\n// We will be storing the mounted elements by routes\nlet mountedElements = {}\n\n// When a shared element is mounted it calls to this function\n// and we register it\nfunction register(instance, props ) {\n\tlet wrapper = props.wrapper.id\n\tif (!mountedElements[wrapper]) {\n\t\tmountedElements[wrapper] = []\n\t}\n\tmountedElements[wrapper].push(instance);\n}\n\n// When it's unmounted we delete the references to it\nfunction unregister(instance) {\n\tlet wrapper = instance.props.wrapper.id\n\tlet stack = mountedElements[ wrapper ]\n\tif( !stack ) return;\n\t\n\tif (stack) {\n\t\tlet i = stack.length\n\t\twhile (i-- > 0) {\n\t\t\tif (stack[i] === instance) {\n\t\t\t\tstack.splice(i, 1); \n\t\t\t}\n\t\t}\n\t}\n}\n\n// Layers registered callback to listen to transitions\nlet clbks = []\n\n// Here we will be store the current breakPoint and screenIndexes when\n// the shared elements are measured\nlet breakPoint, screenIndexes;\n\n// Needs to force all the shared element to measure themselves in order to get\n// the rights coords to start the shared element transitions\n// This is called by the ScreenStack when the transition has just been required\nfunction reMeasure( layout, bp, indexes ){\n\tlet screens = Object.keys( mountedElements );\n\tif( screens.length < 2 ) return;\n\n\tbreakPoint = bp\n\tscreenIndexes = indexes\n\n\tlet offset = { x: layout.x, y: layout.y };\n\tscreens.forEach( key => {\n\t\tmountedElements[key].forEach( el => {\n\t\t\tel.measure( offset );\n\t\t})\n\t})\n}\n\n// This method is called just before starting the screen transition when the URL changes\n// Screen stack is the one responsible of calling it through the context\nfunction startTransition( leavingKeys, enteringKeys, toIndex, leavingTransition ){\n\tclbks.forEach( clbk => clbk( leavingKeys, enteringKeys, toIndex, leavingTransition ) )\n}\n\nclass TransitionLayer extends Component {\n\tconstructor( props ){\n\t\tsuper( props )\n\t\tthis.state = {\n\t\t\telements: []\n\t\t}\n\t\tthis.checkForTransitions = this.checkForTransitions.bind(this);\n\t}\n\n\trender(){\n\t\tlet layout = this.props.layout;\n\t\tlet box = {\n\t\t\ttop: layout.y || 0,\n\t\t\tright: (layout.x || 0) + layout.width,\n\t\t\tleft: layout.x || 0,\n\t\t\tbottom: (layout.y || 0) + layout.height\n\t\t}\n\n\t\tlet elements = this.state.elements;\n\t\tlet list = Object.keys( elements ).map( id => elements[id] );\n\t\t\n\t\treturn (\n\t\t\t<View style={ [styles.container, box] } pointerEvents=\"none\">\n\t\t\t\t{ list }\n\t\t\t</View>\n\t\t)\n\t}\n\n\tcheckForTransitions(enteringKeys, leavingKeys, toIndex, leavingTransition) {\n\t\tlet couples = this.getTransitionCouples( enteringKeys, leavingKeys )\n\n\t\tif (!couples.length) return;\n\n\t\tthis.leavingTransition = leavingTransition;\n\n\t\tthis.waitForReadyAndRender( couples, toIndex );\n\t}\n\n\twaitForReadyAndRender( couples, toIndex ){\n\t\t// Check if the boxes are already calculated\n\t\tlet i = couples.length;\n\t\twhile( i-- > 0 ){\n\t\t\tif( !couples[i].leaving.box || !couples[i].entering.box ){\n\t\t\t\t// oops! retry\n\t\t\t\treturn setTimeout( () => this.waitForReadyAndRender( couples, toIndex ) );\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet elements = {}\n\t\tcouples.forEach( couple => {\n\t\t\tlet id = createId()\n\t\t\t// console.log( `from ${JSON.stringify(couple.leaving.box)} to ${JSON.stringify(couple.entering.box)}` )\n\t\t\telements[ id ] = this.renderElement( couple, id )\n\t\t});\n\n\t\tthis.setState({elements})\n\t}\n\n\trenderElement( {leaving, entering}, id ){\n\t\treturn (\n\t\t\t<TransitionElement key={ id }\n\t\t\t\tleaving={ leaving }\n\t\t\t\tentering={ entering }\n\t\t\t\tbreakPoint={ breakPoint }\n\t\t\t\tscreenIndexes={ screenIndexes }\n\t\t\t\tleavingTransition={ this.leavingTransition && this.leavingTransition( breakPoint ) }\n\t\t\t\tonTransitionEnd={ () => this.removeElement(id) } />\n\t\t)\n\t}\n\n\tremoveElement( id ){\n\t\tlet elements = { ...this.state.elements }\n\t\tdelete elements[id]\n\t\tthis.setState({elements})\n\t}\n\n\tcleanProps( props ){\n\t\tlet clean = {};\n\n\t\tObject.keys( props ).forEach( p => {\n\t\t\tif( p !== 'se' && p !== 'wrapper' && p !== 'children' && p !== 'transitionStyles' ) {\n\t\t\t\tclean[ p ] = props[p]\n\t\t\t}\n\t\t});\n\n\t\treturn clean;\n\t}\n\t\n\tgetTransitionCouples( fromIds, toIds ){\n\t\tlet leaving = {};\n\t\tlet couples = [];\n\n\t\tfromIds.forEach( id => {\n\t\t\tmountedElements[id] && mountedElements[id].forEach( el => {\n\t\t\t\tleaving[ el.props.sharedId ] = el;\n\t\t\t})\n\t\t})\n\n\t\ttoIds.forEach( id => {\n\t\t\tmountedElements[id] && mountedElements[id].forEach( el => {\n\t\t\t\tif ( leaving[el.props.sharedId] ){\n\t\t\t\t\tcouples.push({\n\t\t\t\t\t\tleaving: leaving[ el.props.sharedId ],\n\t\t\t\t\t\tentering: el\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\n\t\treturn couples;\n\t}\n\n\tcomponentDidMount(){\n\t\t// Start listening to transitions\n\t\tclbks.push( this.checkForTransitions );\n\t}\n\n\tcomponentWillUnmount(){\n\t\tlet i = clbks.length;\n\t\twhile( i-- > 0 ){\n\t\t\tif( clbks[i] === this.checkForTransitions ){\n\t\t\t\t// Remove the callback\n\t\t\t\tclbks.splice( i , 1 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tposition: 'absolute',\n\t\tzIndex: 10000\n\t}\n})\n\nconst SharedElementWrapper = props => (\n\t<Context.Provider value={{ register, unregister, startTransition, reMeasure }}>\n\t\t{ props.children }\n\t\t<TransitionLayer router={ props.router } layout={ props.layout } />\n\t</Context.Provider>\n);\n\nexport {\n\tContext,\n\tSharedElementWrapper\n}","import React, {Component, createRef} from 'react'\nimport PropTypes from 'prop-types'\nimport {Animated, View, StyleSheet, Platform} from 'react-native'\nimport {memoize, bind} from './utils/utils'\nimport ScreenWrapper from './ScreenWrapper'\nimport {animatedStyles} from './utils/animatedStyles'\nimport {Context} from './utils/sharedElementContext'\n\nconst isWeb = Platform.OS === 'web'\n\nexport default class ScreenStack extends Component {\n\tstatic propTypes = {\n\t\trouter: PropTypes.object,\n\t\tscreenTransition: PropTypes.object,\n\t\tstackTransition: PropTypes.object,\n\t\tstackIndexes: PropTypes.object,\n\t\tstack: PropTypes.array,\n\t\tindex: PropTypes.number,\n\t\tlayout: PropTypes.object\n\t}\n\n\tstatic defaultProps = {\n\t\tstackTransition: {},\n\t\tstackIndexes: {} \n\t}\n\n\tstatic contextType = Context;\n\n\tconstructor( props ){\n\t\tsuper( props );\n\t\t\n\t\tlet { stack, index } = props\n\n\t\tthis.state = {\n\t\t\tindexes: this.calculateIndexes({}, stack, index ),\n\t\t\tlayout: false\n\t\t}\n\n\t\tthis.screenRefs = {};\n\n\t\tthis.previousIndex = index;\n\t\tthis.previousScreen = stack[index] && stack[index].key;\n\n\t\t// memoize a couple of methods\n\t\tthis.calculateIndexes = memoize( this.calculateIndexes.bind( this ) )\n\t\tthis.updateRelativeIndexes = memoize( this.updateRelativeIndexes.bind( this ) )\n\n\t\t// Track the screens that are ready for transitions\n\t\t// the one who have already a layout\n\t\tthis.readyScreens = {}\n\n\t\tbind( this, ['_onScreenReady', '_onScreenUnmount'] );\n\t}\n\n\trender(){\n\t\tlet { stack, router } = this.props\n\t\tlet containerStyles = [\n\t\t\tstyles.container,\n\t\t\tthis.animatedStyles\n\t\t]\n\n\t\treturn (\n\t\t\t<Animated.View style={containerStyles}>\n\t\t\t\t<View style={styles.stack} onLayout={ e => this.updateLayout(e) }>\n\t\t\t\t\t{ this.renderScreens(router, stack) }\n\t\t\t\t</View>\n\t\t\t</Animated.View>\n\t\t)\n\t}\n\t\n\trenderScreens( router, stack ){\n\t\tlet { layout, indexes } = this.state\n\t\t\n\t\t// Wait for the layout to be drawn\n\t\tif( !layout ) return;\n\n\t\tlet screens = [];\n\t\tlet isShowing = this.props.stackIndexes.showing;\n\t\tstack.forEach( item => {\n\t\t\tlet key = item.key;\n\n\t\t\tif( !indexes[key] ) {\n\t\t\t\t// We are probably rebuilding indexes after navigating\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( !this.screenRefs[key] ){\n\t\t\t\tthis.screenRefs[key] = createRef()\n\t\t\t}\n\n\t\t\tscreens.push(\n\t\t\t\t<ScreenWrapper item={ item }\n\t\t\t\t\tanimating={ this.props.animating || this.state.animating }\n\t\t\t\t\tref={ this.screenRefs[key] }\n\t\t\t\t\tScreenStack={ ScreenStack }\n\t\t\t\t\trouter={ router }\n\t\t\t\t\tindexes={ indexes[ key ] }\n\t\t\t\t\tlayout={ layout }\n\t\t\t\t\ttransition={ this.getScreenTransition( item.Screen ) }\n\t\t\t\t\tonReady={ this._onScreenReady }\n\t\t\t\t\tonUnmount={ this._onScreenUnmount }\n\t\t\t\t\tdrawer={ this.props.drawer }\n\t\t\t\t\tbreakPoint={ this.props.breakPoint }\n\t\t\t\t\tkey={ key }\n\t\t\t\t\tisShowing={ isShowing }\n\t\t\t\t\tnavProps={ this.props.navProps } />\n\t\t\t)\n\t\t})\n\n\t\treturn screens;\n\t}\n\n\tgetScreenTransition( Screen ){\n\t\tif( typeof Screen.getTransition === 'function' ){\n\t\t\tlet transition = Screen.getTransition( this.props.breakPoint );\n\t\t\tif( transition === false ) return;\n\t\t\tif( transition ) return transition;\n\t\t}\n\n\t\treturn this.props.screenTransition;\n\t}\n\n\tupdateLayout( e ){\n\t\tthis.setState({ layout: e.nativeEvent.layout });\n\t\tthis.animatedStyles = animatedStyles(this.props.stackTransition, this.props.stackIndexes, e.nativeEvent.layout )\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tlet { stack, index, screenTransition } = this.props\n\t\tlet indexes = this.calculateIndexes( this.state.indexes, stack, this.previousIndex, screenTransition )\n\n\t\t// Check if the indexes has changed\n\t\tif( indexes !== this.state.indexes ){\n\t\t\tthis.setState( { indexes } );\n\t\t}\n\t\t\n\t\t// If the flag needRelativeUpdate is up, we need to update the relative\n\t\t// indexes to start the animations\n\t\tif (this.needRelativeUpdate) {\n\t\t\t\n\t\t\t// All the shared elements have been mounted, measure them ASAP\n\t\t\tthis.context.reMeasure(\n\t\t\t\tthis.props.layout,\n\t\t\t\tthis.props.breakPoint,\n\t\t\t\tthis.transitionIndexes\n\t\t\t);\n\n\t\t\t// Unset the transitionIndexes now\n\t\t\tthis.transitionIndexes = false;\n\n\t\t\t// Calculate next indexes\n\t\t\tlet nextIndexes = this.updateRelativeIndexes(indexes, stack, index);\n\n\t\t\t// At the next tick we can update the indexes and start the animations\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.needRelativeUpdate = false;\n\t\t\t\tthis.startTransition( this.state.indexes, nextIndexes );\n\t\t\t\tthis.setState({ indexes: nextIndexes })\n\t\t\t})\n\t\t}\n\n\t\t// We can init without setting the routes so maybe we don't have a screen just yet\n\t\tlet screen = stack[index];\n\t\tif( !screen ) return;\n\n\t\t// If the pointer to the current screen has changed we need to start\n\t\t// the animations at the next tick, so raise the flag needRelativeUpdate\n\t\tif( index !== this.previousIndex || screen.key !== this.previousScreen ){\n\t\t\tthis.transitionIndexes = {\n\t\t\t\tleaving: this.previousIndex,\n\t\t\t\tentering: index\n\t\t\t}\n\t\t\tthis.needRelativeUpdate = true;\n\t\t\tthis.previousIndex = index;\n\t\t\tthis.previousScreen = screen.key;\n\t\t\tthis.forceUpdate();\n\t\t}\n\n\t\tlet prevShowing = prevProps.stackIndexes.showing;\n\t\tlet nextShowing = this.props.stackIndexes.showing;\n\t\tif( prevShowing && !nextShowing ){\n\t\t\tthis.triggerCycleMethod( this.getCurrentItem(), 'componentWillLeave' );\n\t\t}\n\t\tif( !prevShowing && nextShowing ){\n\t\t\tthis.triggerCycleMethod( this.getCurrentItem(), 'componentWillEnter' );\n\t\t}\n\t}\n\n\t/**\n\t * Calculate new indexes based on the previous one and the stack.\n\t * If there are no changes in the indexes, returns oldIndexes.\n\t */\n\tcalculateIndexes( oldIndexes, stack, activeIndex ){\n\t\tlet count = stack.length\n\t\tlet indexes = { ...oldIndexes }\n\t\tlet unusedIndexes = { ...oldIndexes }\n\t\tlet updated = false;\n\n\t\tstack.forEach( ({ key }, i) => {\n\t\t\tif( unusedIndexes[key] ){\n\t\t\t\treturn delete unusedIndexes[key]\n\t\t\t}\n\n\t\t\tupdated = true;\n\n\t\t\tindexes[ key ] = {\n\t\t\t\tscreen: i,\n\t\t\t\tcount: count,\n\t\t\t\trelative: activeIndex - i,\n\t\t\t\ttransition: new Animated.Value( activeIndex - i ),\n\t\t\t\tparent: this.props.parentIndexes\n\t\t\t}\n\t\t})\n\n\t\t// Delete tranistions not used\n\t\tObject.keys( unusedIndexes ).forEach( key => {\n\t\t\tdelete indexes[key]\n\t\t\tdelete this.screenRefs[key]\n\t\t\tupdated = true;\n\t\t})\n\n\t\treturn updated ? indexes : oldIndexes\n\t}\n\t\n\t/**\n\t * Updates the relative index and the transitions.\n\t * Needs to be called when the activeIndex changes.\n\t */\n\tupdateRelativeIndexes( oldIndexes, stack, activeIndex ){\n\t\tlet indexes =  { ...oldIndexes }\n\t\tlet count = stack.length\n\n\t\tstack.forEach( ({key}, i) => {\n\t\t\tlet index = {\n\t\t\t\tscreen: i,\n\t\t\t\tcount: count,\n\t\t\t\trelative: activeIndex - i,\n\t\t\t\ttransition: indexes[key].transition,\n\t\t\t\tparent: this.props.parentIndexes\n\t\t\t}\n\n\t\t\tindexes[key] = index;\n\t\t})\n\n\t\treturn indexes;\n\t}\n\n\tstartTransition( prevIndexes, nextIndexes ){\n\t\tlet prevItem, nextItem, toIndex;\n\n\t\t// Screen transitions\n\t\tthis.props.stack.forEach( item  => {\n\t\t\tlet { key, Screen } = item;\n\n\t\t\tlet prevIndex = prevIndexes[key];\n\t\t\tlet nextIndex = nextIndexes[key];\n\n\t\t\tif( prevIndex.relative === 0 ){\n\t\t\t\tprevItem = item;\n\t\t\t}\n\t\t\tif( nextIndex.relative === 0 ){\n\t\t\t\tnextItem = item;\n\t\t\t\ttoIndex = prevIndex.relative;\n\t\t\t}\n\n\t\t\tif( prevIndex && nextIndex && prevIndex.relative !== nextIndex.relative) {\n\t\t\t\tthis.setState({animating: true});\n\t\t\t\tlet transition = this.getScreenTransition( Screen );\t\t\t\t\n\n\t\t\t\tAnimated.timing( nextIndex.transition, {\n\t\t\t\t\ttoValue: nextIndex.relative,\n\t\t\t\t\teasing: transition.easing,\n\t\t\t\t\tduration: transition.duration || 300,\n\t\t\t\t\tuseNativeDriver: !isWeb,\n\t\t\t\t}).start( this._endAnimation )\n\t\t\t}\n\t\t})\n\n\t\t// Signal for shared elements transition to start\n\t\tif (prevItem && nextItem && prevItem !== nextItem ) {\n\t\t\tif( this.props.stackIndexes.showing ){\n\t\t\t\tthis.triggerCycleMethod( prevItem, 'componentWillLeave' );\n\t\t\t\tthis.triggerCycleMethod( nextItem, 'componentWillEnter' );\n\t\t\t}\n\n\t\t\tthis.context.startTransition(\n\t\t\t\tthis.getActiveScreens(prevItem),\n\t\t\t\tthis.getActiveScreens(nextItem),\n\t\t\t\ttoIndex,\n\t\t\t\tprevItem.Screen.getTransition\n\t\t\t);\n\t\t}\n\t}\n\n\t_endAnimation = () => {\n\t\t// This is called as the last Animated frame is triggered\n\t\t// wait a bit until that frame is reflected in the UI\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ animating: false }, () => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t})\n\t\t}, 16);\n\t}\n\n\tgetActiveScreens( item ){\n\t\tlet keys = [item.key]\n\t\tlet tabs = item.tabs\n\n\t\tif( tabs ){\n\t\t\tkeys = keys.concat(\n\t\t\t\tthis.getActiveScreens( tabs.stack[tabs.activeIndex] )\n\t\t\t)\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\tgetCurrentItem(){\n\t\tconst stack = this.props.stack\n\t\tlet i = stack.length\n\t\tconst indexes = this.state.indexes\n\n\t\twhile( i-- > 0 ){\n\t\t\tlet item = stack[i];\n\t\t\tif( indexes[ item.key ].relative === 0 ){\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n\n\ttriggerCycleMethod( item, method ){\n\t\tif( !item ) return;\n\n\t\tlet ref = this.screenRefs[ item.key ];\n\t\tif( ref && ref.current && ref.current[method] ){\n\t\t\tref.current[method]();\n\t\t}\n\t}\n\n\t_onScreenReady( id ){\n\t\tthis.readyScreens[ id ] = 1;\n\t}\n\n\t_onScreenUnmount( id ){\n\t\tdelete this.readyScreens[id];\n\t}\n\n\tshouldComponentUpdate(){\n\t\treturn !this.props.animating;\n\t}\n}\n\nlet styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tposition: 'relative',\n\t\tzIndex: 1\n\t},\n\tdrawer: {},\n\tstack: {\n\t\theight: '100%', width: '100%'\n\t}\n})","import React, {Component, createRef} from 'react'\nimport { StyleSheet, Animated, View } from 'react-native'\nimport {animatedStyles} from './utils/animatedStyles'\nimport ScreenContent from './ScreenContent'\n\nexport default class ModalWrapper extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.screenRef = createRef()\n\t\tthis.setAnimatedLayout( props.indexes, props.layout )\n\t}\n\n\trender(){\n\t\tlet containerStyles = [\n\t\t\tstyles.container,\n\t\t\tthis.animatedStyles\n\t\t]\n\n\t\tlet item = this.props.stack[0];\n\t\tlet content;\n\t\t\n\t\tif( item ){\n\t\t\tcontent = <ScreenContent renderScreen={ this._renderScreen } animating={ this.props.animating } />;\n\t\t}\n\n\t\treturn (\n\t\t\t<Animated.View style={ containerStyles }>\n\t\t\t\t{ content }\n\t\t\t</Animated.View>\n\t\t)\n\t}\n\n\t_renderScreen = () => {\n\t\tlet item = this.props.stack[0];\n\t\tlet ref = item.Screen.prototype instanceof Component ? this.screenRef : undefined;\n\n\t\treturn (\t\n\t\t\t<item.Screen router={ this.props.router }\n\t\t\t\tref={ ref }\n\t\t\t\tdrawer={ this.props.drawer }\n\t\t\t\tindexes={ this.props.indexes }\n\t\t\t\tlayout={ this.props.layout }\n\t\t\t\tlocation={ item.location }\n\t\t\t\tbreakPoint={ this.props.breakPoint }\n\t\t\t\t{...this.props.navProps } />\n\t\t);\n\t}\n\n\tgetScreenItem( item ){\n\t\tif( item && item !== this.item ){\n\t\t\tthis.item = item;\n\t\t}\n\t\treturn this.item;\n\t}\n\t\n\tsetAnimatedLayout( indexes, layout ){\n\t\tthis.animatedStyles = animatedStyles( this.props.transition, indexes, layout )\n\t}\n\n\thasLayoutChanged(prevProps) {\n\t\tif (!this.props.indexes) return;\n\n\t\tlet { width } = prevProps.layout;\n\t\tlet { showing } = prevProps.indexes;\n\t\tlet { layout, indexes } = this.props;\n\n\t\treturn (\n\t\t\twidth !== layout.width ||\n\t\t\tshowing !== indexes.showing\n\t\t);\n\t}\n\t\n\tcomponentWillUnmount(){\n\t\tif( this.props.indexes.showing ){\n\t\t\tthis.triggerCycleMethod('componentWillLeave')\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tif( this.props.indexes.showing ){\n\t\t\tthis.triggerCycleMethod('componentWillEnter')\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ){\n\t\tconst prevShowing = prevProps.indexes.showing;\n\t\tconst nextShowing = this.props.indexes.showing;\n\n\t\tif( prevShowing && !nextShowing ){\n\t\t\tthis.triggerCycleMethod('componentWillLeave')\n\t\t}\n\t\telse if( !prevShowing && nextShowing ){\n\t\t\tthis.triggerCycleMethod('componentWillEnter')\n\t\t}\n\n\t\tif (this.hasLayoutChanged(prevProps)) {\n\t\t\tthis.setAnimatedLayout(this.props.indexes, this.props.layout);\n\t\t}\n\t}\n\n\ttriggerCycleMethod( method ){\n\t\tlet ref = this.screenRef;\n\t\tif( ref && ref.current && ref.current[method] && this.lastLFMethod !== method){\n\t\t\tref.current[method]();\n\t\t}\n\t\tthis.lastLFMethod = method;\n\t}\n}\n\nlet styles = StyleSheet.create({\n\tcontainer: {\n\t\toverflow: 'hidden',\n\t\tposition: 'absolute',\n\t\twidth: '100%', height: '100%',\n\t\ttop: 0, left: 0,\n\t\tzIndex:10,\n\t\tshadowColor: '#000',\n\t\tshadowOpacity: .1,\n\t\tshadowRadius: 10,\n\t\televation: 3\n\t}\n})","import React, {Component} from 'react'\nimport { StyleSheet, Animated, View } from 'react-native'\nimport {animatedStyles} from './utils/animatedStyles'\nimport Interactable from 'react-interactable'\n\nlet handleWidth = 15\n\nexport default class DrawerWrapper extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\n\t\tthis.state = {\n\t\t\topen: props.initiallyOpen || false\n\t\t};\n\n\t\t// This will be true when we know the real width of the drawer\n\t\tthis.layoutUpdated = false;\n\t\tthis.drawerWidth = 300;\n\t\t\n\t\tthis.drawerPos = new Animated.Value( props.initiallyOpen ? this.drawerWidth : 0 );\n\t\tthis.calculateDrawerIndex();\n\n\t\tthis.overlayAnimStyle = {\n\t\t\ttransform: [{translateX: this.drawerIndex.interpolate({\n\t\t\t\tinputRange: [0, 0.01, 1],\n\t\t\t\toutputRange: [ -10000, 0, 0]\n\t\t\t})}],\n\t\t\topacity: this.drawerIndex.interpolate({\n\t\t\t\tinputRange: [0,0,1,1],\n\t\t\t\toutputRange: [0,0,.5,.5]\n\t\t\t})\n\t\t}\n\n\t\tconst drawerMethods = {\n\t\t\topen: () => this.openDrawer(),\n\t\t\tclose: () => this.closeDrawer()\n\t\t}\n\t\tthis._drawerMethods = drawerMethods\n\t}\n\n\trender(){\n\t\tlet { Drawer, router, collapsible, navProps } = this.props\n\t\tlet handle, overlay\n\t\tif( collapsible ){\n\t\t\thandle = <View style={ styles.handle } />\n\t\t\toverlay = (\n\t\t\t<Animated.View style={ [styles.overlay, this.overlayAnimStyle] }\n\t\t\t\tonClick={ () => this.closeDrawer() }>\n\t\t\t</Animated.View>\n\t\t\t)\n\t\t}\n\n\t\tlet width = this.state.open ? this.drawerWidth * 2 : this.drawerWidth + handleWidth;\n\t\tlet left = this.layoutUpdated ? - this.drawerWidth : -3000;\n\n\t\tlet containerStyles = [\n\t\t\tstyles.container,\n\t\t\tstyles.collapsibleContainer,\n\t\t\t{width, left},\n\t\t\tthis.animatedStyles\n\t\t]\n\n\t\tlet drawerStyles = [\n\t\t\tstyles.drawer,\n\t\t\tstyles.collapsibleDrawer\n\t\t]\n\n\t\tlet snapPoints = [\n\t\t\t{ x: 0, id: 'closed' }, {x: this.drawerWidth, id: 'open'}\n\t\t];\n\n\t\treturn (\n\t\t\t<Animated.View style={ containerStyles }>\n\t\t\t\t{ overlay }\n\t\t\t\t<Interactable.View dragEnabled={ !!collapsible }\n\t\t\t\t\tref=\"drawer\"\n\t\t\t\t\thorizontalOnly={ true } snapPoints={ snapPoints }\n\t\t\t\t\tboundaries={{right: this.drawerWidth, bounce: 0}}\n\t\t\t\t\tonDrag={ e => this.onDrag( e ) }\n\t\t\t\t\tanimatedValueX={ this.drawerPos }>\n\t\t\t\t\t<View style={ drawerStyles } ref=\"layout\" onLayout={ e => this.updateLayout(e) }>\n\t\t\t\t\t\t<Drawer router={ router }\n\t\t\t\t\t\t\tdrawer={ this._drawerMethods }\n\t\t\t\t\t\t\tlayout={ this.props.layout }\n\t\t\t\t\t\t\tbreakPoint={ this.props.breakPoint }\n\t\t\t\t\t\t\tindexes={{ transition: this.drawerIndex }}\n\t\t\t\t\t\t\t{ ...navProps } />\n\t\t\t\t\t\t{ handle }\n\t\t\t\t\t</View>\n\t\t\t\t</Interactable.View>\n\t\t\t</Animated.View>\n\t\t)\n\t}\n\t\n\tupdateLayout( e ){\n\t\tlet {layout} = e.nativeEvent;\n\n\t\tthis.layoutUpdated = true;\n\t\tthis.animatedStyles = animatedStyles(this.props.transition, this.props.indexes, layout );\n\t\tthis.drawerWidth = Math.max( 0, layout.width - handleWidth );\n\t\tthis.calculateDrawerIndex();\n\t\tthis.forceUpdate();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif( prevProps.collapsible !== this.props.collapsible ){\n\t\t\tthis.drawerPos.setValue(0);\n\t\t}\n\t\tif( prevProps.breakPoint !== this.props.breakPoint ){\n\t\t\tthis.refs.layout.measure( (dx, dy, width, height, x, y) => {\n\t\t\t\tthis.updateLayout({ nativeEvent: {layout: {width, height, x, y}}});\n\t\t\t})\n\t\t}\n\t}\n\n\tcalculateDrawerIndex(){\n\t\tlet di = this.drawerIndex;\n\n\t\tif( this.state.open ){\n\t\t\tthis.drawerPos.setValue( this.drawerWidth );\n\t\t}\n\n\t\tlet index = this.drawerPos.interpolate({\n\t\t\tinputRange: [0, this.drawerWidth ],\n\t\t\toutputRange: [0, 1]\n\t\t})\n\n\t\tif( di ){\n\t\t\tdi._config = index._config;\n\t\t\tdi._interpolation = index._interpolation;\n\t\t}\n\t\telse {\n\t\t\tthis.drawerIndex = index;\n\t\t}\n\t}\n\n\topenDrawer(){\n\t\tif( !this.props.collapsible || this.state.open ) return;\n\n\t\tlet drawer = this.refs.drawer\n\t\tthis.setState({open: true})\n\t\tdrawer && drawer.setVelocity({x: 3000})\n\t}\n\n\tcloseDrawer(){\n\t\tif( !this.props.collapsible || !this.state.open ) return;\n\n\t\tlet drawer = this.refs.drawer\n\t\tthis.setState({open: false})\n\t\tdrawer && drawer.setVelocity({x: -3000})\n\t}\n\n\tonDrag( e ){\n\t\tif( e.nativeEvent ) e = e.nativeEvent\n\t\t\n\t\tif( e.state === 'start' ){\n\t\t\tthis.setState({open: true})\n\t\t}\n\t\telse if( e.state === 'end' && e.targetSnapPointId === 'closed' ){\n\t\t\tthis.setState({open: false})\n\t\t}\n\t}\n}\n\nlet styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexDirection: 'row'\n\t},\n\tcollapsibleContainer: {\n    position: 'absolute',\n\t\ttop: 0, bottom: 0,\n\t\tzIndex: 2000,\n\t},\n\tdrawer: {\n    // position: 'absolute',\n\t\ttop: 0, left: 0,\n\t\theight: '100%', width: '100%',\n\t\tflex: 1\n\t},\n\tcollapsibleDrawer: {\n    left: 0,\n    width: '100%',\n    flex: 1,\n\t\tposition: 'relative',\n\t\tzIndex: 20000,\n\t\tpaddingRight: handleWidth\n\t},\n\thandle: {\n\t\twidth: handleWidth,\n\t\ttop: 0, bottom: 0, right: 0,\n\t\t// backgroundColor: 'green',\n\t\tposition: 'absolute',\n\t\tzIndex: 10\n\t},\n\toverlay: {\n\t\tbackgroundColor: 'black',\n\t\theight: '100%',\n\t\twidth: '400%',\n\t\tposition: 'absolute'\n\t},\n\texpander: {\n\t\tposition: 'absolute',\n\t\theight: '100%',\n\t\ttop: 0, left: 0, bottom: 0\n\t}\n})","import { Easing } from 'react-native'\n\nexport default {\n\tstyles: function desktopMobileTransition( indexes, layout ){\n\t\tlet leftColumn = indexes.screen ? 400 : 0;\n\t\treturn {\n\t\t\twidth: {\n\t\t\t\tinputRange: [ -2, -1, 0, 1, 2, 3 ],\n\t\t\t\toutputRange: [ 0, 0, layout.width - leftColumn, 400, 0, 0]\n\t\t\t},\n\t\t\t\n\t\t\ttranslateX: {\n\t\t\t\tinputRange: [ -2, -1, 0, 1, 2 ],\n\t\t\t\toutputRange: [ layout.width, layout.width, leftColumn, 0, 0]\n\t\t\t}\n\t\t}\n\t},\n\teasing: Easing.linear,\n\tduration: 300,\n\n\t// different transitions for modals can be set here\n\t// modalTransition: { stack, drawer, modal}\n}","export default {\n\tstyles: function mobileDefaultTransition( indexes, layout ){\n\t\treturn {\n\t\t\ttranslateX: {\n\t\t\t\tinputRange: [ -2, -1, 0, 1 ],\n\t\t\t\toutputRange: [ layout.width, layout.width, 0, 0 ]\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tinputRange: [ -2, -1, 0, .8, 1 ],\n\t\t\t\toutputRange: [ 0, 1, 1, 0, 0]\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tinputRange: [ -1, 0, 1, 2 ],\n\t\t\t\toutputRange: [ 1, 1, .5, .5]\n\t\t\t}\n\t\t}\n\t},\n\tduration: 300,\n\tcollapsibleDrawer: true,\n\t\n\t// different transitions for modals can be set here\n\t// modalTransition: { stack, drawer, modal}\n\n\t// also transitions for tabs\n\t// tabTransition: {styles, duration, easing}\n}","import {Easing} from 'react-native'\n\nlet stackAndDrawer = {\n\tstyles: {\n\t\ttranslateY: {\n\t\t\tinputRange: [ 0, 1 ],\n\t\t\toutputRange: [ -100, 0 ]\n\t\t},\n\t\topacity: {\n\t\t\tinputRange: [ 0, 1 ],\n\t\t\toutputRange: [ 0, 1 ]\n\t\t}\n\t},\n\teasing: Easing.linear,\n\tduration: 300\n}\n\nexport default {\n\tstack: stackAndDrawer,\n\tdrawer: stackAndDrawer,\n\tmodal:{\n\t\tstyles: function modalDefaultTransition( indexes, layout ) {\n\t\t\treturn {\n\t\t\t\ttranslateY: {\n\t\t\t\t\tinputRange: [ 0, 1 ],\n\t\t\t\t\toutputRange: [ layout.height, 0 ]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\teasing: Easing.linear,\n\t\tduration: 300\n\t}\n}","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport createRouter from 'urlstack'\nimport { Dimensions, View, StyleSheet, Animated, Platform, StatusBar, BackHandler } from 'react-native'\nimport ScreenStack from './ScreenStack'\nimport ModalWrapper from './ModalWrapper'\nimport DrawerWrapper from './DrawerWrapper'\nimport { SharedElementWrapper } from './utils/sharedElementContext'\nimport desktopTransition from './defaultTransitions/desktopTransition'\nimport mobileTransition from './defaultTransitions/mobileTransition'\nimport modalTransition from './defaultTransitions/modalTransition'\nimport {memoize} from './utils/utils'\n\nconst isWeb = Platform.OS === 'web'\n\nlet router = createRouter();\nexport {router};\n\nexport default class Navigator extends Component {\n\tconstructor( props ){\n\t\tsuper( props )\n\n\t\tthis.state = {\n\t\t\tlayout: this.getWindowSize()\n\t\t};\n\n\t\tthis.calculateTransition( props.transitions, this.state.layout.width )\n\n\t\tthis.getScreenStack = memoize( this.getScreenStack )\n\t\tthis._onBack = this._onBack.bind( this )\n\n\t\tthis.drawer = {\n\t\t\topen: () => this.drawerInstance.openDrawer(),\n\t\t\tclose: () => this.drawerInstance.closeDrawer(),\n\t\t}\n\n\t\tBackHandler.addEventListener( 'hardwareBackPress', this._onBack )\n\t}\n\n\tstatic propTypes = {\n\t\ttransitions: PropTypes.object,\n\t\tinterceptor: PropTypes.func,\n\t\tstrategy: PropTypes.string\n\t}\n\n\tstatic defaultProps = {\n\t\tstrategy: 'hash',\n\t\ttransitions: {\n\t\t\t0: mobileTransition,\n\t\t\t800: desktopTransition\n\t\t}\n\t}\n\n\trender(){\n\t\tlet router = this.router;\n\t\tif( !router ) return null;\n\t\t\n\t\tlet { DrawerComponent, interceptor, routes, transitions, drawerInitiallyOpen, ...props } = this.props\n\t\tlet { layout, indexes } = this.state\n\t\t\n\t\tlet transition = this.currentTransition\n\t\tlet breakPoint = this.currentBreakpoint\n\t\tlet modalTransition = this.getModalTransitions( transition )\n\t\tlet { stack, index } = this.getScreenStack( router.stack, router.activeIndex )\n\n\t\treturn (\n\t\t\t<SharedElementWrapper router={router} layout={layout}>\n\t\t\t\t<View style={ styles.windowWrapper }>\n\t\t\t\t\t<View style={styles.container} onLayout={ e => this._onLayout( e.nativeEvent.layout ) }>\n\t\t\t\t\t\t<DrawerWrapper ref={ component => this.drawerInstance = component }\n\t\t\t\t\t\t\trouter={router}\n\t\t\t\t\t\t\ttransition={modalTransition.drawer}\n\t\t\t\t\t\t\tbreakPoint={ breakPoint }\n\t\t\t\t\t\t\tindexes={indexes.stack}\n\t\t\t\t\t\t\tcollapsible={ transition.collapsibleDrawer }\n\t\t\t\t\t\t\tDrawer={ DrawerComponent }\n\t\t\t\t\t\t\tinitiallyOpen={ drawerInitiallyOpen }\n\t\t\t\t\t\t\tnavProps={ props } />\n\t\t\t\t\t\t<ScreenStack router={router}\n\t\t\t\t\t\t\tanimating={ this.state.animating }\n\t\t\t\t\t\t\tscreenTransition={transition}\n\t\t\t\t\t\t\tstackTransition={modalTransition.stack}\n\t\t\t\t\t\t\tstackIndexes={indexes.stack}\n\t\t\t\t\t\t\tbreakPoint={ breakPoint }\n\t\t\t\t\t\t\tstack={stack}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tlayout={layout}\n\t\t\t\t\t\t\tdrawer={this.drawer}\n\t\t\t\t\t\t\tnavProps={props}/>\n\t\t\t\t\t\t<ModalWrapper router={router}\n\t\t\t\t\t\t\tanimating={ this.state.animating }\n\t\t\t\t\t\t\tstack={router.modal.stack}\n\t\t\t\t\t\t\tindex={router.modal.stack}\n\t\t\t\t\t\t\ttransition={modalTransition.modal}\n\t\t\t\t\t\t\tbreakPoint={ breakPoint }\n\t\t\t\t\t\t\tindexes={indexes.modal}\n\t\t\t\t\t\t\tlayout={layout}\n\t\t\t\t\t\t\tdrawer={this.drawer}\n\t\t\t\t\t\t\tnavProps={props} />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</SharedElementWrapper>\n\t\t)\n\t}\n\n\tcalculateTransition( transitions, width ){\n\t\tlet breakPoints = Object.keys( transitions ).sort( (a,b) => a - b )\n\t\tlet i = breakPoints.length\n\t\t\n\t\twhile( i-- > 0 ){\n\t\t\tif( width >= parseInt( breakPoints[i]) ){\n\t\t\t\tthis.currentTransition = transitions[ breakPoints[i] ]\n\t\t\t\tthis.currentBreakpoint = parseInt(breakPoints[i]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.currentTransition = transitions[ breakPoints[0] ]\n\t\tthis.currentBreakpoint = parseInt(breakPoints[0]);\n\t}\n\n\tgetModalTransitions( transition ){\n\t\tlet t = transition || this.currentTransition;\n\t\treturn t.modalTransition || modalTransition\n\t}\n\n\t// Takes the modal screens out of the stack\n\tgetScreenStack( routerStack, routerIndex ){\n\t\tlet stack = routerStack.slice();\n\t\tlet index = routerIndex;\n\t\t\n\t\tif( !stack.length ){\n\t\t\treturn {stack, index};\n\t\t}\n\t\t\n\t\tlet lastIndex = routerStack.length - 1;\n\t\tlet last = stack[ lastIndex ]\n\t\tlet options = last.Screen.urlstackOptions || {}\n\n\t\tif( options.modal ){\n\t\t\tstack.pop()\n\t\t\tif( index === lastIndex ){\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {stack, index}\n\t}\n\n\tstartRouter(){\n\t\trouter.setStrategy( this.props.strategy );\n\t\trouter.setRoutes( this.props.routes );\n\n\t\tlet interceptor = this.props.interceptor;\n\t\tif( interceptor ){\n\t\t\trouter.onBeforeChange( interceptor );\n\t\t}\n\n\t\tthis.fu = () => this.forceUpdate();\n\t\trouter.onChange( this.fu );\n\t\trouter.start();\n\n\t\tthis.router = router;\n\n\t\tthis.showingModal = this.detectModal();\n\t\tthis.updateModalIndexes( this.showingModal );\n\t}\n\n\tgetWindowSize(){\n\t\tlet { width, height } = Dimensions.get('window')\n\t\treturn { \n\t\t\twidth, height, x: 0, y: 0\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.startRouter();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.unmounted = true;\n\t\trouter.urlhub.offChange( this.fu );\n\t\trouter.urlhub.offBeforeChange( this.props.interceptor );\n\t\tBackHandler.removeEventListener( 'hardwareBackPress', this._onBack )\n\t}\n\n\tcomponentDidUpdate( prevProps ){\n\t\tlet showModal = this.detectModal()\n\t\tif( this.showingModal !== showModal ){\n\t\t\tthis.showingModal = showModal;\n\t\t\tthis.updateModalIndexes( showModal );\n\t\t}\n\n\t\tif( prevProps.transistions !== this.props.transistions ){\n\t\t\tthis.calculateTransition( this.props.transitions, this.state.layout.width )\n\t\t}\n\t}\n\n\t_onLayout( layout ){\n\t\tif( this.unmounted ) return;\n\n\t\tthis.calculateTransition( this.props.transitions, layout.width )\n\t\tthis.setState( {layout} )\n\t}\n\n\t_onBack(){\n\t\tlet router = this.router;\n\t\tlet stack = router.stack;\n\t\tlet nextRoute;\n\t\tif( router.modal.active ){\n\t\t\tif( router.modal.activeIndex ){\n\t\t\t\tnextRoute = router.modal.stack[ router.modal.activeIndex - 1 ].path\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnextRoute = stack[ router.activeIndex ].location\n\t\t\t\tnextRoute = nextRoute.pathname + nextRoute.search\n\t\t\t}\n\t\t}\n\t\telse if( router.activeIndex ){\n\t\t\tnextRoute = stack[ router.activeIndex - 1 ].path\n\t\t}\n\n\t\tif( nextRoute ){\n\t\t\trouter.navigate( nextRoute )\n\t\t\treturn true; // Prevents getting out of the app\n\t\t}\n\t}\n\n\tdetectModal(){\n\t\treturn this.router.modal.active;\n\t}\n\n\tupdateModalIndexes( showModal ){\n\t\tlet stateUpdate = {};\n\t\tlet indexes = this.state.indexes;\n\n\t\tif( !indexes ){\n\t\t\tindexes = {\n\t\t\t\tmodal: {showing: !!showModal, transition: new Animated.Value( showModal ? 1 : 0) },\n\t\t\t\tstack: {showing: !showModal, transition: new Animated.Value( showModal ? 0 : 1) }\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet transitions = this.getModalTransitions()\n\n\t\t\tstateUpdate = {animating: true};\n\n\t\t\tindexes = {\n\t\t\t\tmodal: {showing: !!showModal, transition: indexes.modal.transition },\n\t\t\t\tstack: {showing: !showModal, transition: indexes.stack.transition }\n\t\t\t}\n\n\t\t\tAnimated.timing( indexes.modal.transition, {\n\t\t\t\ttoValue: showModal ? 1 : 0,\n\t\t\t\teasing: transitions.modal.easing,\n\t\t\t\tduration: transitions.modal.duration || 300,\n\t\t\t\tuseNativeDriver: !isWeb\n\t\t\t}).start()\n\n\t\t\tAnimated.timing( indexes.stack.transition, {\n\t\t\t\ttoValue: showModal ? 0 : 1,\n\t\t\t\teasing: transitions.stack.easing,\n\t\t\t\tduration: transitions.stack.duration || 300,\n\t\t\t\tuseNativeDriver: !isWeb\n\t\t\t}).start( () => this.setState( this._endAnimation ));\n\t\t}\n\n\t\tstateUpdate.indexes = indexes;\n\t\tthis.setState( stateUpdate )\n\t}\n\t\n\t_endAnimation = () => {\n\t\t// This is called as the last Animated frame is triggered\n\t\t// wait a bit until that frame is reflected in the UI\n\t\tsetTimeout( () => {\n\t\t\tthis.setState({ animating: false }, () => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t})\n\t\t}, 16);\n\t}\n}\n\n// let statusBarHeight = Platform.OS === 'android' ? StatusBar.currentHeight : 0\n\nlet styles = StyleSheet.create({\n\twindowWrapper: {\n\t\tflex: 1,\n\t},\n\n\tcontainer: {\n\t\tflex: 1,\n\t\tflexDirection: 'row',\n\t\toverflow: 'hidden'\n\t},\n})","import React, { Component } from 'react';\nimport { View, Platform } from 'react-native';\nimport { Context } from './utils/sharedElementContext';\nimport WrapperContext from './utils/wrapperContext';\nimport PropTypes from 'prop-types'\n\nconst isWeb = Platform.OS === 'web';\n\nclass SharedElement extends Component {\n\tstatic propTypes = {\n\t\t// These properties are used by the TransitionElement\n\t\ttransition: PropTypes.oneOf([ PropTypes.object, PropTypes.func ]),\n\t\ttransitionRender: PropTypes.func,\n\t\ttransitionState: PropTypes.number,\n\n\t\t// This sharedId is used by the sharedElementContext to match what components\n\t\t// need to be shared\n\t\tsharedId: PropTypes.string,\n\t}\n\n\tstatic defaultTypes = {\n\t\n\t}\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tprops.se.register( this, props );\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View style={ this.props.style }\n\t\t\t\tref=\"el\"\n\t\t\t\tonLayout={ () => this._onLayout() }\n\t\t\t\tpointerEvents=\"auto\">\n\t\t\t\t{ this.props.children }\n\t\t\t</View>\n\t\t);\n\t}\n\t\n\tcomponentWillUnmount(){\n\t\tthis.props.se.unregister( this );\n\t}\n\n\tmeasure( offset ){\n\t\tthis.box = false;\n\n\t\tif( !isWeb && !this.layouted ){\n\t\t\t// We need the layout to calculate the measures properly in native\n\t\t\treturn setTimeout( () => this.measure( offset ) );\n\t\t}\n\t\t\n\t\tthis.refs.el && this.refs.el.measure( ( cx, cy, width, height, x, y ) => {\n\t\t\tthis.box = {\n\t\t\t\twidth, height,\n\t\t\t\tx: x - offset.x,\n\t\t\t\ty: y - offset.y\n\t\t\t};\n\t\t})\n\t}\n\n\t_onLayout(){\n\t\tthis.layouted = true;\n\t}\n}\n\nfunction ContextConsumerHOC( Component ){\n\treturn function SharedElementHOC( props ){\n\t\t\n\t\treturn (\n\t\t\t<Context.Consumer>\n\t\t\t\t{ se => (\n\t\t\t\t\t<WrapperContext.Consumer>\n\t\t\t\t\t\t{ wrapper => (\n\t\t\t\t\t\t\t<Component {...props} se={se} wrapper={wrapper} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</WrapperContext.Consumer>\n\t\t\t\t)}\n\t\t\t</Context.Consumer>\n\t\t)\n\t}\n}\n\nconst SharedElementWithContext = ContextConsumerHOC( SharedElement )\nexport default SharedElementWithContext\n"],"names":["memoize","fn","args","value","recalculate","fnArgs","apply","length","arguments","i","createId","Math","round","random","toString","nofn","bind","that","methods","forEach","m","styles","indexes","layout","scroll","width","translateX","inputRange","outputRange","opacity","easing","Easing","linear","duration","animatedStyles","transition","transformStyles","count","zIndex","abs","relative","Object","keys","key","styleKeys","warnKeys","console","warn","interpolate","transformKeys","type","warned","_typeof","push","transform","n","s","perspective","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","translateY","skeyX","skewY","stagger","animatedValue","gap","times","follower","Animated","Value","_value","timing","toValue","start","stagged","stage","attr","val","shifted","inputValue","animated","Context","React","createContext","ScreenContent","Component","this","props","renderScreen","animating","ScreenWrapper","_this","item","ScreenStack","router","drawer","breakPoint","navProps","Screen","location","ref","prototype","screenRef","undefined","isTabs","screenTransition","tabTransition","stack","tabs","index","activeIndex","parentIndexes","id","createRef","setAnimatedLayout","containerStyles","container","contextValue","View","style","onLayout","_this2","onReady","Provider","_renderScreen","prevProps","hasLayoutChanged","screen","isShowing","triggerCycleMethod","onUnmount","method","current","lastLFMethod","StyleSheet","create","overflow","position","top","left","bottom","right","isWeb","Platform","OS","defaultDuration","TransitionElement","getIndexes","leaving","getTransition","transitionStyles","pointerEvents","renderChildren","customRenderer","transitionRender","entering","children","transitionStyle","defaultTransition","getDefaultTransition","defaultStyles","transitionState","screenIndexes","leavingBox","box","enteringBox","leavingTransition","getInterpolation","height","x","y","fromIndex","toIndex","fromValue","inverted","onTransitionEnd","PropTypes","object","number","mountedElements","register","instance","wrapper","unregister","splice","clbks","reMeasure","bp","screens","offset","el","measure","startTransition","leavingKeys","enteringKeys","clbk","TransitionLayer","state","elements","checkForTransitions","list","map","couples","getTransitionCouples","waitForReadyAndRender","setTimeout","couple","renderElement","setState","_this3","removeElement","clean","p","fromIds","toIds","sharedId","SharedElementWrapper","forceUpdate","calculateIndexes","screenRefs","previousIndex","previousScreen","updateRelativeIndexes","readyScreens","e","updateLayout","renderScreens","stackIndexes","showing","getScreenTransition","_onScreenReady","_onScreenUnmount","nativeEvent","stackTransition","needRelativeUpdate","context","transitionIndexes","nextIndexes","_this4","prevShowing","nextShowing","getCurrentItem","oldIndexes","unusedIndexes","updated","parent","_this5","_this6","prevIndexes","prevItem","nextItem","prevIndex","nextIndex","_this7","useNativeDriver","_endAnimation","getActiveScreens","concat","array","flex","ModalWrapper","content","shadowColor","shadowOpacity","shadowRadius","elevation","handleWidth","DrawerWrapper","open","initiallyOpen","layoutUpdated","drawerWidth","drawerPos","calculateDrawerIndex","overlayAnimStyle","drawerIndex","drawerMethods","openDrawer","close","closeDrawer","_drawerMethods","handle","overlay","Drawer","collapsible","onClick","collapsibleContainer","drawerStyles","collapsibleDrawer","snapPoints","Interactable","dragEnabled","horizontalOnly","boundaries","bounce","onDrag","animatedValueX","max","setValue","refs","dx","dy","di","_config","_interpolation","setVelocity","targetSnapPointId","flexDirection","paddingRight","backgroundColor","expander","leftColumn","stackAndDrawer","modal","createRouter","Navigator","getWindowSize","calculateTransition","transitions","getScreenStack","_onBack","drawerInstance","BackHandler","addEventListener","DrawerComponent","drawerInitiallyOpen","interceptor","routes","currentTransition","currentBreakpoint","modalTransition","getModalTransitions","windowWrapper","_onLayout","component","breakPoints","sort","a","b","parseInt","routerStack","routerIndex","slice","lastIndex","urlstackOptions","pop","setStrategy","strategy","setRoutes","onBeforeChange","fu","onChange","showingModal","detectModal","updateModalIndexes","Dimensions","get","startRouter","unmounted","urlhub","offChange","offBeforeChange","removeEventListener","showModal","transistions","nextRoute","active","path","pathname","search","navigate","stateUpdate","func","string","mobileTransition","desktopTransition","SharedElement","se","layouted","cx","cy","ContextConsumerHOC","Consumer","WrapperContext","oneOf","SharedElementWithContext"],"mappings":"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"}