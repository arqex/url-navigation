{"version":3,"file":"react-urlstack.js","sources":["../src/utils/utils.js","../src/defaultTransitions/tabTransition.js","../src/utils/animatedStyles.js","../src/utils/wrapperContext.js","../src/ScreenWrapper.js","../src/TransitionElement.js","../src/utils/sharedElementContext.js","../src/ScreenStack.js","../src/ModalWrapper.js","../src/DrawerWrapper.js","../src/defaultTransitions/desktopTransition.js","../src/defaultTransitions/mobileTransition.js","../src/defaultTransitions/modalTransition.js","../src/Navigator.js","../src/SharedElement.js"],"sourcesContent":["export function memoize( fn ){\r\n\tvar args, value;\r\n\r\n\tfunction recalculate( fnArgs ){\r\n\t\targs = fnArgs\r\n\t\tvalue = fn.apply( null, fnArgs )\r\n\t\treturn value;\r\n\t}\r\n\r\n\treturn function memoized(){\r\n\t\tif( !args || args.length !== arguments.length ){\r\n\t\t\treturn recalculate( arguments )\r\n\t\t}\r\n\r\n\t\tlet i = 0;\r\n\t\twhile( i < args.length ){\r\n\t\t\tif( args[i] !== arguments[i] ){\r\n\t\t\t\treturn recalculate( arguments )\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\r\n\t\treturn value\r\n\t}\r\n}\r\n\r\nexport function createId(){\r\n  return Math.round( Math.random() * 10000000 ).toString(36);\r\n}\r\n\r\nexport function nofn(){}\r\n\r\nexport function bind( that, methods ){\r\n\tmethods.forEach( m => {\r\n\t\tthat[m] = that[m].bind(that)\r\n\t})\r\n}\r\n","import { Easing } from 'react-native'\r\n\r\nexport default {\r\n\tstyles: function tabDefaultTransition( indexes, layout ) {\r\n\t\tlet scroll = layout.width / 2\r\n\t\treturn {\r\n\t\t\ttranslateX: {\r\n\t\t\t\tinputRange: [-2, -1, 0, 1, 2],\r\n\t\t\t\toutputRange: [scroll, scroll, 0, -scroll, -scroll]\r\n\t\t\t},\r\n\t\t\topacity: {\r\n\t\t\t\tinputRange: [-2, -1, 0, .8, 1],\r\n\t\t\t\toutputRange: [0, 0, 1, 0, 0]\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\teasing: Easing.linear,\r\n\tduration: 300\r\n}","import { Animated } from 'react-native';\r\n\r\nexport function animatedStyles( transition, indexes, layout ){\r\n\tlet styles = typeof transition.styles === 'function' ? transition.styles( indexes, layout ) : transition.styles;\r\n\tif( !styles ){\r\n\t\tstyles = {}\r\n\t}\r\n\r\n\tlet animatedStyles = {}\r\n\tlet transformStyles = []\r\n\r\n\tif( indexes.count ){\r\n\t\tanimatedStyles.zIndex = indexes.count - Math.abs(indexes.relative)\r\n\t}\r\n\r\n\tObject.keys( styles ).forEach( key => {\r\n\t\tlet value = styles[key];\r\n\r\n\t\tif( styleKeys[key] ){\r\n\t\t\tif( warnKeys[key] ){\r\n\t\t\t\tconsole.warn(`react-urlstack: It's possible in web, but react-native won't animate the property \"${key}\"`)\r\n\t\t\t}\r\n\t\t\tif( value && value.inputRange ){\r\n\t\t\t\tanimatedStyles[ key ] = indexes.transition.interpolate( value )\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanimatedStyles[ key ] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if( transformKeys[key] ){\r\n\t\t\t// Check values\r\n\t\t\tlet type = transformKeys[key];\r\n\t\t\tlet warned = false;\r\n\t\t\tif( value && value.outputRange ){\r\n\t\t\t\tstyles[key].outputRange.forEach( value =>{\r\n\t\t\t\t\tif( !warned && typeof value !== type ){\r\n\t\t\t\t\t\twarned = true;\r\n\t\t\t\t\t\tconsole.warn(`react-urlstack: Even if it works in web, react-native only accepts type \"${transformKeys[key]}\" for \"${key}\". Given \"${ value }\".`);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\ttransformStyles.push({\r\n\t\t\t\t\t[key]: indexes.transition.interpolate( value )\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttransformStyles.push({\r\n\t\t\t\t\t[key]: value\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn(`react-urlstack: Unknown property to animate \"${key}\"`)\r\n\t\t}\r\n\t})\r\n\r\n\tif( transformStyles.length ){\r\n\t\tanimatedStyles.transform = transformStyles\r\n\t}\r\n\r\n\treturn animatedStyles\r\n}\r\n\r\n\r\nlet styleKeys = {};\r\nlet warnKeys = {};\r\n['left', 'right', 'top', 'bottom'].forEach( key => {\r\n\tstyleKeys[key] = 1;\r\n\twarnKeys[key] = 1;\r\n});\r\n['width', 'height', 'opacity', 'backgroundColor', 'borderRadius'].forEach( key => {\r\n\tstyleKeys[key] = 1 \r\n})\r\n\r\nlet n = 'number', s = 'string';\r\nlet transformKeys = {\r\n\tperspective: n,\r\n\trotate: s, rotateX: s, rotateY: s, rotateZ: s,\r\n\tscale: n, scaleX: n, scaleY: n,\r\n\ttranslateX: n, translateY: n,\r\n\tskeyX: s, skewY: s\r\n};\r\n\r\n\r\nexport function stagger( animatedValue, gap, times, styles ){\r\n\tlet follower = new Animated.Value( animatedValue._value );\r\n\tAnimated.timing( follower, {duration: 0, toValue: animatedValue} ).start();\r\n\t\r\n\tlet stagged = [ animatedStyles({styles}, {transition: follower}) ];\r\n\r\n\tfor( let i = 1; i < times; i++ ){\r\n\t\tlet stage = {};\r\n\t\tObject.keys( styles ).forEach( attr => {\r\n\t\t\tlet val = styles[attr];\r\n\t\t\tif( val && val.inputRange ){\r\n\t\t\t\tlet shifted = {\r\n\t\t\t\t\tinputRange: [],\r\n\t\t\t\t\toutputRange: val.outputRange\r\n\t\t\t\t}\r\n\t\t\t\tval.inputRange.forEach( inputValue => {\r\n\t\t\t\t\tshifted.inputRange.push( inputValue + (i * gap) )\r\n\t\t\t\t})\r\n\t\t\t\tstage[attr] = shifted;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstage[attr] = val;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet animated = animatedStyles({styles: stage}, {transition: follower});\r\n\t\tstagged.push( animated );\r\n\t}\r\n\r\n\treturn stagged;\r\n}","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React, {Component, createRef} from 'react'\r\nimport { StyleSheet, Animated } from 'react-native'\r\nimport tabTransition from './defaultTransitions/tabTransition'\r\nimport {animatedStyles} from './utils/animatedStyles'\r\nimport Context from './utils/wrapperContext'\r\nimport {createId, nofn} from './utils/utils'\r\n\r\nexport default class ScreenWrapper extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t\tthis.id = createId()\r\n\r\n\t\tthis.screenRef = createRef()\r\n\r\n\t\tthis.setAnimatedLayout( props.indexes, props.layout )\r\n\t}\r\n\r\n\tstatic defaultProps ={\r\n\t\tonReady: nofn,\r\n\t\tonUnmount: nofn\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet item = this.props.item\r\n\t\tlet containerStyles = [\r\n\t\t\tstyles.container,\r\n\t\t\tthis.animatedStyles\r\n\t\t]\r\n\t\tlet contextValue = {\r\n\t\t\ttransition: this.props.transition,\r\n\t\t\tindexes: this.props.indexes,\r\n\t\t\tid: item.key\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Animated.View style={ containerStyles } onLayout={ () => this.props.onReady( item.key ) }>\r\n\t\t\t\t<Context.Provider value={contextValue}>\r\n\t\t\t\t\t{ this.renderScreen() }\r\n\t\t\t\t</Context.Provider>\r\n\t\t\t</Animated.View>\r\n\t\t)\r\n\t}\r\n\r\n\trenderScreen(){\r\n\t\tlet { item, ScreenStack, router, transition, indexes, layout, drawer, breakPoint, navProps } = this.props;\r\n\t\tlet { Screen, location } = item;\r\n\t\tlet ref = Screen instanceof Component ? this.screenRef : undefined;\r\n\r\n\t\tif( item.isTabs ){\r\n\t\t\treturn (\r\n\t\t\t\t<Screen router={router}\r\n\t\t\t\t\tref={ ref }\r\n\t\t\t\t\tlocation={location}\r\n\t\t\t\t\tindexes={indexes}\r\n\t\t\t\t\tlayout={layout}\r\n\t\t\t\t\tdrawer= { drawer }\r\n\t\t\t\t\tbreakPoint={ breakPoint }\r\n\t\t\t\t\t{ ...navProps } >\r\n\t\t\t\t\t<ScreenStack router={ router }\r\n\t\t\t\t\t\tisTabs={ true }\r\n\t\t\t\t\t\tscreenTransition={ transition.tabTransition || tabTransition }\r\n\t\t\t\t\t\tstack={ item.tabs.stack }\r\n\t\t\t\t\t\tindex={ item.tabs.activeIndex }\r\n\t\t\t\t\t\tparentIndexes={ indexes }\r\n\t\t\t\t\t\tlayout={ layout }\r\n\t\t\t\t\t\tbreakPoint={ breakPoint }\r\n\t\t\t\t\t\tnavProps={ navProps } />\r\n\t\t\t\t</Screen>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Screen router={router}\r\n\t\t\t\tref={ ref }\r\n\t\t\t\tlocation={location}\r\n\t\t\t\tindexes={indexes}\r\n\t\t\t\tlayout={layout}\r\n\t\t\t\tdrawer= { drawer }\r\n\t\t\t\tbreakPoint={ breakPoint }\r\n\t\t\t\t{...navProps} />\r\n\t\t)\r\n\t}\r\n\t\r\n\tsetAnimatedLayout( indexes, layout ){\r\n\t\tlet transition = this.props.transition;\r\n\t\tthis.animatedStyles = transition ? animatedStyles( transition, indexes, layout ) : {};\r\n\t}\r\n\r\n\tcomponentWillReceiveProps( nextProps ){\r\n\t\tif( this.hasLayoutChanged( nextProps ) ){\r\n\t\t\tthis.setAnimatedLayout( nextProps.indexes, nextProps.layout );\r\n\t\t}\r\n\t}\r\n\r\n\thasLayoutChanged( nextProps ){\r\n\t\tif( !nextProps.indexes ) return;\r\n\t\t\r\n\t\tlet { width } = nextProps.layout;\r\n\t\tlet { screen, relative } = nextProps.indexes;\r\n\t\tlet { layout, indexes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\twidth !== layout.width ||\r\n\t\t\tscreen !== indexes.screen ||\r\n\t\t\trelative !== indexes.relative ||\r\n\t\t\tthis.props.transition !== nextProps.transition\r\n\t\t)\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tif( this.props.isShowing && this.props.indexes.relative === 0 ){\r\n\t\t\tthis.triggerCycleMethod('componentWillLeave')\r\n\t\t}\r\n\t\tthis.props.onUnmount( this.props.item.key )\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tif( this.props.isShowing && this.props.indexes.relative === 0 ){\r\n\t\t\tthis.triggerCycleMethod('componentWillEnter')\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillEnter(){\r\n\t\tthis.triggerCycleMethod('componentWillEnter')\r\n\t}\r\n\r\n\tcomponentWillLeave(){\r\n\t\tthis.triggerCycleMethod('componentWillLeave')\r\n\t}\r\n\r\n\ttriggerCycleMethod( method ){\r\n\t\tlet ref = this.screenRef;\r\n\t\tif( ref && ref.current && ref.current[method] ){\r\n\t\t\tref.current[method]();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\toverflow: 'hidden',\r\n\t\tposition: 'absolute',\r\n\t\ttop: 0, left: 0, bottom: 0, right: 0,\r\n\t\tzIndex:10\r\n\t}\r\n})","import React, { Component } from 'react';\r\nimport { Animated, StyleSheet, Platform } from 'react-native';\r\nimport {animatedStyles} from './utils/animatedStyles';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst isWeb = Platform.OS === 'web';\r\nconst defaultDuration = 500;\r\n\r\nexport default class TransitionElement extends Component {\r\n\tstatic propTypes = {\r\n\t\t/** The entering props and box */\r\n\t\tentering: PropTypes.object, // {props, box}\r\n\t\t/** The leaving props and box */\r\n\t\tleaving: PropTypes.object, // {props, box}\r\n\t\t/** The breakpoint width from the navigator */\r\n\t\tbreakPoint: PropTypes.number,\r\n\t\t/** Screen indexes involved in the transition. If no transitionState is given in the SharedElement props, these values will be used as start and end points for  */\r\n\t\tscreenIndexes: PropTypes.object // {entering, leaving}\r\n\t}\r\n\r\n\tconstructor( props ){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.indexes = this.getIndexes();\r\n\t\tthis.animatedValue = new Animated.Value( this.indexes.leaving );\r\n\t\tthis.transition = this.getTransition();\r\n\t}\r\n\r\n\trender(){\r\n\t\t// If the styles returned false, we don't want the transition \r\n\t\tif( this.transition === false ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet transitionStyles = [\r\n\t\t\tstyles.container,\r\n\t\t\tthis.props.leaving.props.style,\r\n\t\t\tanimatedStyles( this.transition, {transition: this.animatedValue} )\r\n\t\t]\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Animated.View style={ transitionStyles } pointerEvents=\"auto\">\r\n\t\t\t\t{ this.renderChildren() }\r\n\t\t\t</Animated.View>\r\n\t\t)\r\n\t}\r\n\r\n\trenderChildren(){\r\n\t\tlet props = this.props;\r\n\t\tlet customRenderer = props.leaving.props.transitionRender;\r\n\r\n\t\tif( customRenderer ){\r\n\t\t\treturn customRenderer({\r\n\t\t\t\tanimatedValue: this.animatedValue,\r\n\t\t\t\tbreakPoint: props.breakPoint,\r\n\t\t\t\tentering: props.entering,\r\n\t\t\t\tleaving: props.leaving\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn props.leaving.props.children;\r\n\t}\r\n\r\n\tgetTransition(){\r\n\t\tlet transitionStyle = this.props.leaving.props.transition;\r\n\t\tlet defaultTransition = this.getDefaultTransition()\r\n\r\n\t\tlet transition\r\n\t\t\r\n\t\tif( typeof transitionStyle === 'function' ){\r\n\t\t\tlet props = this.props\r\n\t\t\ttransition = transitionStyle( {\r\n\t\t\t\tbreakPoint: props.breakPoint,\r\n\t\t\t\tentering: props.entering,\r\n\t\t\t\tleaving: props.leaving,\r\n\t\t\t\tdefaultTransition: { ...defaultTransition }\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttransition = transitionStyle;\r\n\t\t}\r\n\r\n\t\tif( transition === false ){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if( transition === undefined ){\r\n\t\t\treturn defaultTransition\r\n\t\t}\r\n\r\n\t\t// Let's fill the gaps in the transitions\r\n\t\tif( !transition.duration ){\r\n\t\t\ttransition.duration = defaultTransition.duration;\r\n\t\t}\r\n\t\t\r\n\t\tlet styles = transition.styles;\r\n\t\tlet defaultStyles = defaultTransition.styles;\r\n\r\n\t\tif( !styles ){\r\n\t\t\tstyles = {}\r\n\t\t\ttransition.style = styles\r\n\t\t}\r\n\r\n\t\tObject.keys(defaultStyles).forEach(key => {\r\n\t\t\tif (styles[key] === undefined) {\r\n\t\t\t\tstyles[key] = defaultStyles[key]\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn transition;\r\n\t}\r\n\r\n\tgetIndexes(){\r\n\t\treturn {\r\n\t\t\tentering: this.props.entering.props.transitionState || this.props.screenIndexes.entering,\r\n\t\t\tleaving: this.props.leaving.props.transitionState || this.props.screenIndexes.leaving,\r\n\t\t}\r\n\t}\r\n\r\n\t// The default transition is just a translation\r\n\tgetDefaultTransition(){\r\n\t\tlet {leaving, entering} = this.indexes;\r\n\t\tlet leavingBox = this.props.leaving.box;\r\n\t\tlet enteringBox = this.props.entering.box;\r\n\t\tlet leavingTransition = this.props.leavingTransition\r\n\r\n\t\treturn {\r\n\t\t\tstyles: {\r\n\t\t\t\twidth: this.getInterpolation( leaving, entering, leavingBox.width, enteringBox.width ),\r\n\t\t\t\theight: this.getInterpolation( leaving, entering, leavingBox.height, enteringBox.height ),\r\n\t\t\t\ttranslateX: this.getInterpolation( leaving, entering, leavingBox.x, enteringBox.x ),\r\n\t\t\t\ttranslateY: this.getInterpolation( leaving, entering, leavingBox.y, enteringBox.y ),\r\n\t\t\t},\r\n\t\t\tduration: (leavingTransition && leavingTransition.duration) || defaultDuration\r\n\t\t}\r\n\t}\r\n\r\n\tgetInterpolation( fromIndex, toIndex, fromValue, toValue ){\r\n\t\tif( fromValue === toValue ) return fromValue;\r\n\t\tlet inverted = fromIndex > toIndex;\r\n\t\treturn {\r\n\t\t\tinputRange: inverted ? [ toIndex, fromIndex ] : [ fromIndex, toIndex ],\r\n\t\t\toutputRange: inverted ? [ toValue, fromValue ] : [ fromValue, toValue ]\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tif( this.transition !== false ){\r\n\t\t\t// Start the animation\r\n\t\t\tAnimated.timing( this.animatedValue, {\r\n\t\t\t\ttoValue: this.indexes.entering,\r\n\t\t\t\tduration: this.transition.duration || defaultDuration,\r\n\t\t\t\t// useNativeDriver: !isWeb // Native driver is not animating width and height\r\n\t\t\t}).start( () => this.props.onTransitionEnd() );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: { position: 'absolute', overflow: 'hidden', top: 0, left: 0 }\r\n})","import React, {Component} from 'react'\r\nimport TransitionElement from '../TransitionElement'\r\nimport {View, StyleSheet} from 'react-native'\r\nimport {createId} from './utils'\r\n\r\nconst Context = React.createContext('sharedElement');\r\n\r\n// We will be storing the mounted elements by routes\r\nlet mountedElements = {}\r\n\r\n// When a shared element is mounted it calls to this function\r\n// and we register it\r\nfunction register(instance, props ) {\r\n\tlet wrapper = props.wrapper.id\r\n\tif (!mountedElements[wrapper]) {\r\n\t\tmountedElements[wrapper] = []\r\n\t}\r\n\tmountedElements[wrapper].push(instance);\r\n}\r\n\r\n// When it's unmounted we delete the references to it\r\nfunction unregister(instance) {\r\n\tlet wrapper = instance.props.wrapper.id\r\n\tlet stack = mountedElements[ wrapper ]\r\n\tif( !stack ) return;\r\n\t\r\n\tif (stack) {\r\n\t\tlet i = stack.length\r\n\t\twhile (i-- > 0) {\r\n\t\t\tif (stack[i] === instance) {\r\n\t\t\t\tstack.splice(i, 1); \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Layers registered callback to listen to transitions\r\nlet clbks = []\r\n\r\n// Here we will be store the current breakPoint and screenIndexes when\r\n// the shared elements are measured\r\nlet breakPoint, screenIndexes;\r\n\r\n// Needs to force all the shared element to measure themselves in order to get\r\n// the rights coords to start the shared element transitions\r\n// This is called by the ScreenStack when the transition has just been required\r\nfunction reMeasure( layout, bp, indexes ){\r\n\tlet screens = Object.keys( mountedElements );\r\n\tif( screens.length < 2 ) return;\r\n\r\n\tbreakPoint = bp\r\n\tscreenIndexes = indexes\r\n\r\n\tlet offset = { x: layout.x, y: layout.y };\r\n\tscreens.forEach( key => {\r\n\t\tmountedElements[key].forEach( el => {\r\n\t\t\tel.measure( offset );\r\n\t\t})\r\n\t})\r\n}\r\n\r\n// This method is called just before starting the screen transition when the URL changes\r\n// Screen stack is the one responsible of calling it through the context\r\nfunction startTransition( leavingKeys, enteringKeys, toIndex, leavingTransition ){\r\n\tclbks.forEach( clbk => clbk( leavingKeys, enteringKeys, toIndex, leavingTransition ) )\r\n}\r\n\r\nclass TransitionLayer extends Component {\r\n\tconstructor( props ){\r\n\t\tsuper( props )\r\n\t\tthis.state = {\r\n\t\t\telements: []\r\n\t\t}\r\n\t\tthis.checkForTransitions = this.checkForTransitions.bind(this);\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet layout = this.props.layout;\r\n\t\tlet box = {\r\n\t\t\ttop: layout.y || 0,\r\n\t\t\tright: (layout.x || 0) + layout.width,\r\n\t\t\tleft: layout.x || 0,\r\n\t\t\tbottom: (layout.y || 0) + layout.height\r\n\t\t}\r\n\r\n\t\tlet elements = this.state.elements;\r\n\t\tlet list = Object.keys( elements ).map( id => elements[id] );\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<View style={ [styles.container, box] } pointerEvents=\"none\">\r\n\t\t\t\t{ list }\r\n\t\t\t</View>\r\n\t\t)\r\n\t}\r\n\r\n\tcheckForTransitions(enteringKeys, leavingKeys, toIndex, leavingTransition) {\r\n\t\tlet couples = this.getTransitionCouples( enteringKeys, leavingKeys )\r\n\r\n\t\tif (!couples.length) return;\r\n\r\n\t\tthis.leavingTransition = leavingTransition;\r\n\r\n\t\tthis.waitForReadyAndRender( couples, toIndex );\r\n\t}\r\n\r\n\twaitForReadyAndRender( couples, toIndex ){\r\n\t\t// Check if the boxes are already calculated\r\n\t\tlet i = couples.length;\r\n\t\twhile( i-- > 0 ){\r\n\t\t\tif( !couples[i].leaving.box || !couples[i].entering.box ){\r\n\t\t\t\t// oops! retry\r\n\t\t\t\treturn setTimeout( () => this.waitForReadyAndRender( couples, toIndex ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet elements = {}\r\n\t\tcouples.forEach( couple => {\r\n\t\t\tlet id = createId()\r\n\t\t\t// console.log( `from ${JSON.stringify(couple.leaving.box)} to ${JSON.stringify(couple.entering.box)}` )\r\n\t\t\telements[ id ] = this.renderElement( couple, id )\r\n\t\t});\r\n\r\n\t\tthis.setState({elements})\r\n\t}\r\n\r\n\trenderElement( {leaving, entering}, id ){\r\n\t\treturn (\r\n\t\t\t<TransitionElement key={ id }\r\n\t\t\t\tleaving={ leaving }\r\n\t\t\t\tentering={ entering }\r\n\t\t\t\tbreakPoint={ breakPoint }\r\n\t\t\t\tscreenIndexes={ screenIndexes }\r\n\t\t\t\tleavingTransition={ this.leavingTransition && this.leavingTransition( breakPoint ) }\r\n\t\t\t\tonTransitionEnd={ () => this.removeElement(id) } />\r\n\t\t)\r\n\t}\r\n\r\n\tremoveElement( id ){\r\n\t\tlet elements = { ...this.state.elements }\r\n\t\tdelete elements[id]\r\n\t\tthis.setState({elements})\r\n\t}\r\n\r\n\tcleanProps( props ){\r\n\t\tlet clean = {};\r\n\r\n\t\tObject.keys( props ).forEach( p => {\r\n\t\t\tif( p !== 'se' && p !== 'wrapper' && p !== 'children' && p !== 'transitionStyles' ) {\r\n\t\t\t\tclean[ p ] = props[p]\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn clean;\r\n\t}\r\n\t\r\n\tgetTransitionCouples( fromIds, toIds ){\r\n\t\tlet leaving = {};\r\n\t\tlet couples = [];\r\n\r\n\t\tfromIds.forEach( id => {\r\n\t\t\tmountedElements[id] && mountedElements[id].forEach( el => {\r\n\t\t\t\tleaving[ el.props.sharedId ] = el;\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\ttoIds.forEach( id => {\r\n\t\t\tmountedElements[id] && mountedElements[id].forEach( el => {\r\n\t\t\t\tif ( leaving[el.props.sharedId] ){\r\n\t\t\t\t\tcouples.push({\r\n\t\t\t\t\t\tleaving: leaving[ el.props.sharedId ],\r\n\t\t\t\t\t\tentering: el\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\treturn couples;\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t// Start listening to transitions\r\n\t\tclbks.push( this.checkForTransitions );\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tlet i = clbks.length;\r\n\t\twhile( i-- > 0 ){\r\n\t\t\tif( clbks[i] === this.checkForTransitions ){\r\n\t\t\t\t// Remove the callback\r\n\t\t\t\tclbks.splice( i , 1 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tposition: 'absolute',\r\n\t\tzIndex: 10000\r\n\t}\r\n})\r\n\r\nconst SharedElementWrapper = props => (\r\n\t<Context.Provider value={{ register, unregister, startTransition, reMeasure }}>\r\n\t\t{ props.children }\r\n\t\t<TransitionLayer router={ props.router } layout={ props.layout } />\r\n\t</Context.Provider>\r\n);\r\n\r\nexport {\r\n\tContext,\r\n\tSharedElementWrapper\r\n}","import React, {Component, createRef} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Animated, View, StyleSheet, Platform} from 'react-native'\r\nimport {memoize, bind} from './utils/utils'\r\nimport ScreenWrapper from './ScreenWrapper'\r\nimport {animatedStyles} from './utils/animatedStyles'\r\nimport {Context} from './utils/sharedElementContext'\r\n\r\nconst isWeb = Platform.OS === 'web'\r\n\r\nexport default class ScreenStack extends Component {\r\n\tstatic propTypes = {\r\n\t\trouter: PropTypes.object,\r\n\t\tscreenTransition: PropTypes.object,\r\n\t\tstackTransition: PropTypes.object,\r\n\t\tstackIndexes: PropTypes.object,\r\n\t\tstack: PropTypes.array,\r\n\t\tindex: PropTypes.number,\r\n\t\tlayout: PropTypes.object\r\n\t}\r\n\r\n\tstatic defaultProps = {\r\n\t\tstackTransition: {},\r\n\t\tstackIndexes: {} \r\n\t}\r\n\r\n\tstatic contextType = Context;\r\n\r\n\tconstructor( props ){\r\n\t\tsuper( props );\r\n\t\t\r\n\t\tlet { stack, index } = props\r\n\r\n\t\tthis.state = {\r\n\t\t\tindexes: this.calculateIndexes({}, stack, index ),\r\n\t\t\tlayout: false\r\n\t\t}\r\n\r\n\t\tthis.screenRefs = {};\r\n\r\n\t\tthis.previousIndex = index;\r\n\t\tthis.previousScreen = stack[index].key;\r\n\r\n\t\t// memoize a couple of methods\r\n\t\tthis.calculateIndexes = memoize( this.calculateIndexes.bind( this ) )\r\n\t\tthis.updateRelativeIndexes = memoize( this.updateRelativeIndexes.bind( this ) )\r\n\r\n\t\t// Track the screens that are ready for transitions\r\n\t\t// the one who have already a layout\r\n\t\tthis.readyScreens = {}\r\n\r\n\t\tbind( this, ['_onScreenReady', '_onScreenUnmount'] );\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet { stack, router } = this.props\r\n\t\tlet containerStyles = [\r\n\t\t\tstyles.container,\r\n\t\t\tthis.animatedStyles\r\n\t\t]\r\n\r\n\t\treturn (\r\n\t\t\t<Animated.View style={containerStyles}>\r\n\t\t\t\t<View style={styles.stack} onLayout={ e => this.updateLayout(e) }>\r\n\t\t\t\t\t{ this.renderScreens(router, stack) }\r\n\t\t\t\t</View>\r\n\t\t\t</Animated.View>\r\n\t\t)\r\n\t}\r\n\t\r\n\trenderScreens( router, stack ){\r\n\t\tlet { layout, indexes } = this.state\r\n\t\t\r\n\t\t// Wait for the layout to be drawn\r\n\t\tif( !layout ) return;\r\n\r\n\t\tlet screens = [];\r\n\t\tlet isShowing = this.props.stackIndexes.showing;\r\n\t\tstack.forEach( item => {\r\n\t\t\tlet key = item.key;\r\n\r\n\t\t\tif( !indexes[key] ) {\r\n\t\t\t\t// We are probably rebuilding indexes after navigating\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif( !this.screenRefs[key] ){\r\n\t\t\t\tthis.screenRefs[key] = createRef()\r\n\t\t\t}\r\n\r\n\t\t\tscreens.push(\r\n\t\t\t\t<ScreenWrapper item={ item }\r\n\t\t\t\t\tref={ this.screenRefs[key] }\r\n\t\t\t\t\tScreenStack={ ScreenStack }\r\n\t\t\t\t\trouter={ router }\r\n\t\t\t\t\tindexes={ indexes[ key ] }\r\n\t\t\t\t\tlayout={ layout }\r\n\t\t\t\t\ttransition={ this.getScreenTransition( item.Screen ) }\r\n\t\t\t\t\tonReady={ this._onScreenReady }\r\n\t\t\t\t\tonUnmount={ this._onScreenUnmount }\r\n\t\t\t\t\tdrawer={ this.props.drawer }\r\n\t\t\t\t\tbreakPoint={ this.props.breakPoint }\r\n\t\t\t\t\tkey={ key }\r\n\t\t\t\t\tisShowing={ isShowing }\r\n\t\t\t\t\tnavProps={ this.props.navProps } />\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\treturn screens;\r\n\t}\r\n\r\n\tgetScreenTransition( Screen ){\r\n\t\tif( typeof Screen.getTransition === 'function' ){\r\n\t\t\tlet transition = Screen.getTransition( this.props.breakPoint );\r\n\t\t\tif( transition === false ) return;\r\n\t\t\tif( transition ) return transition;\r\n\t\t}\r\n\r\n\t\treturn this.props.screenTransition;\r\n\t}\r\n\r\n\tupdateLayout( e ){\r\n\t\tthis.setState({ layout: e.nativeEvent.layout });\r\n\t\tthis.animatedStyles = animatedStyles(this.props.stackTransition, this.props.stackIndexes, e.nativeEvent.layout )\r\n\t}\r\n\r\n\tcomponentDidUpdate( prevProps ) {\r\n\t\tlet { stack, index, screenTransition } = this.props\r\n\t\tlet indexes = this.calculateIndexes( this.state.indexes, stack, this.previousIndex, screenTransition )\r\n\r\n\t\t// Check if the indexes has changed\r\n\t\tif( indexes !== this.state.indexes ){\r\n\t\t\tthis.setState( { indexes } );\r\n\t\t}\r\n\t\t\r\n\t\t// If the flag needRelativeUpdate is up, we need to update the relative\r\n\t\t// indexes to start the animations\r\n\t\tif (this.needRelativeUpdate) {\r\n\t\t\t\r\n\t\t\t// All the shared elements have been mounted, measure them ASAP\r\n\t\t\tthis.context.reMeasure(\r\n\t\t\t\tthis.props.layout,\r\n\t\t\t\tthis.props.breakPoint,\r\n\t\t\t\tthis.transitionIndexes\r\n\t\t\t);\r\n\r\n\t\t\t// Unset the transitionIndexes now\r\n\t\t\tthis.transitionIndexes = false;\r\n\r\n\t\t\t// Calculate next indexes\r\n\t\t\tlet nextIndexes = this.updateRelativeIndexes(indexes, stack, index);\r\n\r\n\t\t\t// At the next tick we can update the indexes and start the animations\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.needRelativeUpdate = false;\r\n\t\t\t\tthis.startTransition( this.state.indexes, nextIndexes );\r\n\t\t\t\tthis.setState({ indexes: nextIndexes })\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// If the pointer to the current screen has changed we need to start\r\n\t\t// the animations at the next tick, so raise the flag needRelativeUpdate\r\n\t\tif( index !== this.previousIndex || stack[index].key !== this.previousScreen ){\r\n\t\t\tthis.transitionIndexes = {\r\n\t\t\t\tleaving: this.previousIndex,\r\n\t\t\t\tentering: index\r\n\t\t\t}\r\n\t\t\tthis.needRelativeUpdate = true;\r\n\t\t\tthis.previousIndex = index;\r\n\t\t\tthis.previousScreen = stack[index].key;\r\n\t\t\tthis.forceUpdate();\r\n\t\t}\r\n\r\n\t\tlet prevShowing = prevProps.stackIndexes.showing;\r\n\t\tlet nextShowing = this.props.stackIndexes.showing;\r\n\t\tif( prevShowing && !nextShowing ){\r\n\t\t\tthis.triggerCycleMethod( this.getCurrentItem(), 'componentWillLeave' );\r\n\t\t}\r\n\t\tif( !prevShowing && nextShowing ){\r\n\t\t\tthis.triggerCycleMethod( this.getCurrentItem(), 'componentWillEnter' );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate new indexes based on the previous one and the stack.\r\n\t * If there are no changes in the indexes, returns oldIndexes.\r\n\t */\r\n\tcalculateIndexes( oldIndexes, stack, activeIndex ){\r\n\t\tlet count = stack.length\r\n\t\tlet indexes = { ...oldIndexes }\r\n\t\tlet unusedIndexes = { ...oldIndexes }\r\n\t\tlet updated = false;\r\n\r\n\t\tstack.forEach( ({ key }, i) => {\r\n\t\t\tif( unusedIndexes[key] ){\r\n\t\t\t\treturn delete unusedIndexes[key]\r\n\t\t\t}\r\n\r\n\t\t\tupdated = true;\r\n\r\n\t\t\tindexes[ key ] = {\r\n\t\t\t\tscreen: i,\r\n\t\t\t\tcount: count,\r\n\t\t\t\trelative: activeIndex - i,\r\n\t\t\t\ttransition: new Animated.Value( activeIndex - i ),\r\n\t\t\t\tparent: this.props.parentIndexes\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// Delete tranistions not used\r\n\t\tObject.keys( unusedIndexes ).forEach( key => {\r\n\t\t\tdelete indexes[key]\r\n\t\t\tdelete this.screenRefs[key]\r\n\t\t\tupdated = true;\r\n\t\t})\r\n\r\n\t\treturn updated ? indexes : oldIndexes\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates the relative index and the transitions.\r\n\t * Needs to be called when the activeIndex changes.\r\n\t */\r\n\tupdateRelativeIndexes( oldIndexes, stack, activeIndex ){\r\n\t\tlet indexes =  { ...oldIndexes }\r\n\t\tlet count = stack.length\r\n\r\n\t\tstack.forEach( ({key}, i) => {\r\n\t\t\tlet index = {\r\n\t\t\t\tscreen: i,\r\n\t\t\t\tcount: count,\r\n\t\t\t\trelative: activeIndex - i,\r\n\t\t\t\ttransition: indexes[key].transition,\r\n\t\t\t\tparent: this.props.parentIndexes\r\n\t\t\t}\r\n\r\n\t\t\tindexes[key] = index;\r\n\t\t})\r\n\r\n\t\treturn indexes;\r\n\t}\r\n\r\n\tstartTransition( prevIndexes, nextIndexes ){\r\n\t\tlet prevItem, nextItem, toIndex;\r\n\r\n\t\t// Screen transitions\r\n\t\tthis.props.stack.forEach( item  => {\r\n\t\t\tlet { key, Screen } = item;\r\n\r\n\t\t\tlet prevIndex = prevIndexes[key];\r\n\t\t\tlet nextIndex = nextIndexes[key];\r\n\r\n\t\t\tif( prevIndex.relative === 0 ){\r\n\t\t\t\tprevItem = item;\r\n\t\t\t}\r\n\t\t\tif( nextIndex.relative === 0 ){\r\n\t\t\t\tnextItem = item;\r\n\t\t\t\ttoIndex = prevIndex.relative;\r\n\t\t\t}\r\n\r\n\t\t\tif( prevIndex && nextIndex && prevIndex.relative !== nextIndex.relative) {\r\n\t\t\t\tlet transition = this.getScreenTransition( Screen );\t\t\t\t\r\n\r\n\t\t\t\tAnimated.timing( nextIndex.transition, {\r\n\t\t\t\t\ttoValue: nextIndex.relative,\r\n\t\t\t\t\teasing: transition.easing,\r\n\t\t\t\t\tduration: transition.duration || 300,\r\n\t\t\t\t\tuseNativeDriver: !isWeb,\r\n\t\t\t\t}).start()\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// Signal for shared elements transition to start\r\n\t\tif (prevItem && nextItem) {\r\n\t\t\tif( this.props.stackIndexes.showing ){\r\n\t\t\t\tthis.triggerCycleMethod( prevItem, 'componentWillLeave' );\r\n\t\t\t\tthis.triggerCycleMethod( nextItem, 'componentWillEnter' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.context.startTransition(\r\n\t\t\t\tthis.getActiveScreens(prevItem),\r\n\t\t\t\tthis.getActiveScreens(nextItem),\r\n\t\t\t\ttoIndex,\r\n\t\t\t\tprevItem.Screen.getTransition\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tgetActiveScreens( item ){\r\n\t\tlet keys = [item.key]\r\n\t\tlet tabs = item.tabs\r\n\r\n\t\tif( tabs ){\r\n\t\t\tkeys = keys.concat(\r\n\t\t\t\tthis.getActiveScreens( tabs.stack[tabs.activeIndex] )\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn keys;\r\n\t}\r\n\r\n\tgetCurrentItem(){\r\n\t\tconst stack = this.props.stack\r\n\t\tlet i = stack.length\r\n\t\tconst indexes = this.state.indexes\r\n\r\n\t\twhile( i-- > 0 ){\r\n\t\t\tlet item = stack[i];\r\n\t\t\tif( indexes[ item.key ].relative === 0 ){\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttriggerCycleMethod( item, method ){\r\n\t\tif( !item ) return;\r\n\r\n\t\tlet ref = this.screenRefs[ item.key ];\r\n\t\tif( ref && ref.current && ref.current[method] ){\r\n\t\t\tref.current[method]();\r\n\t\t}\r\n\t}\r\n\r\n\t_onScreenReady( id ){\r\n\t\tthis.readyScreens[ id ] = 1;\r\n\t}\r\n\r\n\t_onScreenUnmount( id ){\r\n\t\tdelete this.readyScreens[id];\r\n\t}\r\n}\r\n\r\nlet styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tposition: 'relative',\r\n\t\tzIndex: 1\r\n\t},\r\n\tdrawer: {},\r\n\tstack: {\r\n\t\theight: '100%', width: '100%'\r\n\t}\r\n})","import React, {Component} from 'react'\r\nimport { StyleSheet, Animated, View } from 'react-native'\r\nimport {animatedStyles} from './utils/animatedStyles'\r\n\r\n\r\nexport default class ModalWrapper extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.setAnimatedLayout( props.indexes, props.layout )\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet containerStyles = [\r\n\t\t\tstyles.container,\r\n\t\t\tthis.animatedStyles\r\n\t\t]\r\n\r\n\t\tlet item = this.props.stack[0];\r\n\t\tlet content;\r\n\t\t\r\n\t\tif( item ){\r\n\t\t\tcontent =(\t\r\n\t\t\t\t<item.Screen router={ this.props.router }\r\n\t\t\t\t\tdrawer={ this.props.drawer }\r\n\t\t\t\t\tindexes={ this.props.indexes }\r\n\t\t\t\t\tlayout={ this.props.layout }\r\n\t\t\t\t\tlocation={ item.location }\r\n\t\t\t\t\tbreakPoint={ this.props.breakPoint }\r\n\t\t\t\t\t{...this.props.navProps } />\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Animated.View style={ containerStyles }>\r\n\t\t\t\t{ content }\r\n\t\t\t</Animated.View>\r\n\t\t)\r\n\t}\r\n\r\n\tgetScreenItem( item ){\r\n\t\tif( item && item !== this.item ){\r\n\t\t\tthis.item = item;\r\n\t\t}\r\n\t\treturn this.item;\r\n\t}\r\n\t\r\n\tsetAnimatedLayout( indexes, layout ){\r\n\t\tthis.animatedStyles = animatedStyles( this.props.transition, indexes, layout )\r\n\t}\r\n\r\n\tcomponentWillReceiveProps( nextProps ){\r\n\t\tif( this.hasLayoutChanged( nextProps ) ){\r\n\t\t\tthis.setAnimatedLayout( nextProps.indexes, nextProps.layout );\r\n\t\t}\r\n\t}\r\n\r\n\thasLayoutChanged( nextProps ){\r\n\t\tif( !nextProps.indexes ) return;\r\n\t\t\r\n\t\tlet { width } = nextProps.layout;\r\n\t\tlet { showing } = nextProps.indexes;\r\n\t\tlet { layout, indexes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\twidth !== layout.width ||\r\n\t\t\tshowing !== indexes.showing\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\toverflow: 'hidden',\r\n\t\tposition: 'absolute',\r\n\t\twidth: '100%', height: '100%',\r\n\t\ttop: 0, left: 0,\r\n\t\tzIndex:10,\r\n\t\tshadowColor: '#000',\r\n\t\tshadowOpacity: .1,\r\n\t\tshadowRadius: 10,\r\n\t\televation: 3\r\n\t}\r\n})","import React, {Component} from 'react'\r\nimport { StyleSheet, Animated, View } from 'react-native'\r\nimport {animatedStyles} from './utils/animatedStyles'\r\nimport Interactable from 'react-interactable'\r\n\r\nlet handleWidth = 15\r\n\r\nexport default class DrawerWrapper extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t\t// This will be true when we know the real width of the drawer\r\n\t\tthis.layoutUpdated = false;\r\n\t\tthis.drawerWidth = 300;\r\n\r\n\t\tthis.drawerPos = new Animated.Value(0);\r\n\t\tthis.calculateDrawerIndex();\r\n\t\r\n\t\tthis.state = {\r\n\t\t\topen: false\r\n\t\t}\r\n\r\n\t\tthis.overlayAnimStyle = {\r\n\t\t\ttransform: [{translateX: this.drawerIndex.interpolate({\r\n\t\t\t\tinputRange: [0, 0.01, 1],\r\n\t\t\t\toutputRange: [ -10000, 0, 0]\r\n\t\t\t})}],\r\n\t\t\topacity: this.drawerIndex.interpolate({\r\n\t\t\t\tinputRange: [0,0,1,1],\r\n\t\t\t\toutputRange: [0,0,.5,.5]\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst drawerMethods = {\r\n\t\t\topen: () => this.openDrawer(),\r\n\t\t\tclose: () => this.closeDrawer()\r\n\t\t}\r\n\t\tthis._drawerMethods = drawerMethods\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet { Drawer, router, collapsible, navProps } = this.props\r\n\t\tlet handle, overlay\r\n\t\tif( collapsible ){\r\n\t\t\thandle = <View style={ styles.handle } />\r\n\t\t\toverlay = (\r\n\t\t\t<Animated.View style={ [styles.overlay, this.overlayAnimStyle] }\r\n\t\t\t\tonClick={ () => this.closeDrawer() }>\r\n\t\t\t</Animated.View>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tlet width = this.state.open ? this.drawerWidth * 2 : this.drawerWidth + handleWidth;\r\n\t\tlet left = this.layoutUpdated ? - this.drawerWidth : -3000;\r\n\r\n\t\tlet containerStyles = [\r\n\t\t\tstyles.container,\r\n\t\t\tcollapsible && styles.collapsibleContainer,\r\n\t\t\tcollapsible && {width, left},\r\n\t\t\tthis.animatedStyles\r\n\t\t]\r\n\r\n\t\tlet drawerStyles = [\r\n\t\t\tstyles.drawer,\r\n\t\t\tcollapsible && styles.collapsibleDrawer\r\n\t\t]\r\n\r\n\t\tlet snapPoints = [\r\n\t\t\t{ x: 0, id: 'closed' }, {x: this.drawerWidth, id: 'open'}\r\n\t\t];\r\n\r\n\t\treturn (\r\n\t\t\t<Animated.View style={ containerStyles }>\r\n\t\t\t\t{ overlay }\r\n\t\t\t\t<Interactable.View dragEnabled={ !!collapsible }\r\n\t\t\t\t\tref=\"drawer\"\r\n\t\t\t\t\thorizontalOnly={ true } snapPoints={ snapPoints }\r\n\t\t\t\t\tboundaries={{right: this.drawerWidth, bounce: 0}}\r\n\t\t\t\t\tonDrag={ e => this.onDrag( e ) }\r\n\t\t\t\t\tanimatedValueX={ this.drawerPos }>\r\n\t\t\t\t\t<View style={ drawerStyles } ref=\"layout\" onLayout={ e => this.updateLayout(e) }>\r\n\t\t\t\t\t\t<Drawer router={ router }\r\n\t\t\t\t\t\t\tdrawer={ this._drawerMethods }\r\n\t\t\t\t\t\t\tlayout={ this.props.layout }\r\n\t\t\t\t\t\t\tbreakPoint={ this.props.breakPoint }\r\n\t\t\t\t\t\t\tindexes={{ transition: this.drawerIndex }}\r\n\t\t\t\t\t\t\t{ ...navProps } />\r\n\t\t\t\t\t\t{ handle }\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</Interactable.View>\r\n\t\t\t</Animated.View>\r\n\t\t)\r\n\t}\r\n\t\r\n\tupdateLayout( e ){\r\n\t\tlet {layout} = e.nativeEvent;\r\n\r\n\t\tthis.layoutUpdated = true;\r\n\t\tthis.animatedStyles = animatedStyles(this.props.transition, this.props.indexes, layout );\r\n\t\tthis.drawerWidth = layout.width - handleWidth;\r\n\t\tthis.calculateDrawerIndex();\r\n\t\tthis.forceUpdate();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif( prevProps.collapsible !== this.props.collapsible ){\r\n\t\t\tthis.drawerPos.setValue(0);\r\n\t\t}\r\n\t\tif( prevProps.breakPoint !== this.props.breakPoint ){\r\n\t\t\tthis.refs.layout.measure( (dx, dy, width, height, x, y) => {\r\n\t\t\t\tthis.updateLayout({ nativeEvent: {layout: {width, height, x, y}}});\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tcalculateDrawerIndex(){\r\n\t\tlet di = this.drawerIndex;\r\n\t\tlet index = this.drawerPos.interpolate({\r\n\t\t\tinputRange: [0, this.drawerWidth ],\r\n\t\t\toutputRange: [0, 1]\r\n\t\t})\r\n\r\n\t\tif( di ){\r\n\t\t\tdi._config = index._config;\r\n\t\t\tdi._interpolation = index._interpolation;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.drawerIndex = index;\r\n\t\t}\r\n\t}\r\n\r\n\topenDrawer(){\r\n\t\tif( !this.props.collapsible || this.state.open ) return;\r\n\r\n\t\tlet drawer = this.refs.drawer\r\n\t\tthis.setState({open: true})\r\n\t\tdrawer && drawer.setVelocity({x: 2000})\r\n\t}\r\n\r\n\tcloseDrawer(){\r\n\t\tif( !this.props.collapsible || !this.state.open ) return;\r\n\r\n\t\tlet drawer = this.refs.drawer\r\n\t\tthis.setState({open: false})\r\n\t\tdrawer && drawer.setVelocity({x: -2000})\r\n\t}\r\n\r\n\tonDrag( e ){\r\n\t\tif( e.nativeEvent ) e = e.nativeEvent\r\n\t\t\r\n\t\tif( e.state === 'start' ){\r\n\t\t\tthis.setState({open: true})\r\n\t\t}\r\n\t\telse if( e.state === 'end' && e.targetSnapPointId === 'closed' ){\r\n\t\t\tthis.setState({open: false})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tcollapsibleContainer: {\r\n    position: 'absolute',\r\n\t\ttop: 0, bottom: 0,\r\n\t\tzIndex: 2000,\r\n\t},\r\n\tdrawer: {\r\n    // position: 'absolute',\r\n\t\ttop: 0, left: 0,\r\n\t\theight: '100%', width: '100%',\r\n\t\tflex: 1\r\n\t},\r\n\tcollapsibleDrawer: {\r\n    left: 0,\r\n    width: '100%',\r\n    flex: 1,\r\n\t\tposition: 'relative',\r\n\t\tzIndex: 20000,\r\n\t\tpaddingRight: handleWidth\r\n\t},\r\n\thandle: {\r\n\t\twidth: handleWidth,\r\n\t\ttop: 0, bottom: 0, right: 0,\r\n\t\t// backgroundColor: 'green',\r\n\t\tposition: 'absolute',\r\n\t\tzIndex: 10\r\n\t},\r\n\toverlay: {\r\n\t\tbackgroundColor: 'black',\r\n\t\theight: '100%',\r\n\t\twidth: '400%',\r\n\t\tposition: 'absolute'\r\n\t},\r\n\texpander: {\r\n\t\tposition: 'absolute',\r\n\t\theight: '100%',\r\n\t\ttop: 0, left: 0, bottom: 0\r\n\t}\r\n})","import { Easing } from 'react-native'\r\n\r\nexport default {\r\n\tstyles: function desktopMobileTransition( indexes, layout ){\r\n\t\tlet leftColumn = indexes.screen ? 400 : 0;\r\n\t\treturn {\r\n\t\t\twidth: {\r\n\t\t\t\tinputRange: [ -2, -1, 0, 1, 2, 3 ],\r\n\t\t\t\toutputRange: [ 0, 0, layout.width - leftColumn, 400, 0, 0]\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttranslateX: {\r\n\t\t\t\tinputRange: [ -2, -1, 0, 1, 2 ],\r\n\t\t\t\toutputRange: [ layout.width, layout.width, leftColumn, 0, 0]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\teasing: Easing.linear,\r\n\tduration: 300,\r\n\r\n\t// different transitions for modals can be set here\r\n\t// modalTransition: { stack, drawer, modal}\r\n}","export default {\r\n\tstyles: function mobileDefaultTransition( indexes, layout ){\r\n\t\treturn {\r\n\t\t\ttranslateX: {\r\n\t\t\t\tinputRange: [ -2, -1, 0, 1 ],\r\n\t\t\t\toutputRange: [ layout.width, layout.width, 0, 0 ]\r\n\t\t\t},\r\n\t\t\topacity: {\r\n\t\t\t\tinputRange: [ -2, -1, 0, .8, 1 ],\r\n\t\t\t\toutputRange: [ 0, 1, 1, 0, 0]\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tinputRange: [ -1, 0, 1, 2 ],\r\n\t\t\t\toutputRange: [ 1, 1, .5, .5]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tduration: 300,\r\n\tcollapsibleDrawer: true,\r\n\t\r\n\t// different transitions for modals can be set here\r\n\t// modalTransition: { stack, drawer, modal}\r\n\r\n\t// also transitions for tabs\r\n\t// tabTransition: {styles, duration, easing}\r\n}","import {Easing} from 'react-native'\r\n\r\nlet stackAndDrawer = {\r\n\tstyles: {\r\n\t\ttranslateY: {\r\n\t\t\tinputRange: [ 0, 1 ],\r\n\t\t\toutputRange: [ -100, 0 ]\r\n\t\t},\r\n\t\topacity: {\r\n\t\t\tinputRange: [ 0, 1 ],\r\n\t\t\toutputRange: [ 0, 1 ]\r\n\t\t}\r\n\t},\r\n\teasing: Easing.linear,\r\n\tduration: 300\r\n}\r\n\r\nexport default {\r\n\tstack: stackAndDrawer,\r\n\tdrawer: stackAndDrawer,\r\n\tmodal:{\r\n\t\tstyles: function modalDefaultTransition( indexes, layout ) {\r\n\t\t\treturn {\r\n\t\t\t\ttranslateY: {\r\n\t\t\t\t\tinputRange: [ 0, 1 ],\r\n\t\t\t\t\toutputRange: [ layout.height, 0 ]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\teasing: Easing.linear,\r\n\t\tduration: 300\r\n\t}\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport createRouter from 'urlstack'\r\nimport { Dimensions, View, StyleSheet, Animated, Platform, StatusBar, BackHandler } from 'react-native'\r\nimport ScreenStack from './ScreenStack'\r\nimport ModalWrapper from './ModalWrapper'\r\nimport DrawerWrapper from './DrawerWrapper'\r\nimport { SharedElementWrapper } from './utils/sharedElementContext'\r\nimport desktopTransition from './defaultTransitions/desktopTransition'\r\nimport mobileTransition from './defaultTransitions/mobileTransition'\r\nimport modalTransition from './defaultTransitions/modalTransition'\r\nimport {memoize} from './utils/utils'\r\n\r\nconst isWeb = Platform.OS === 'web'\r\n\r\nlet router = createRouter();\r\nexport {router};\r\n\r\nexport default class Navigator extends Component {\r\n\tconstructor( props ){\r\n\t\tsuper( props )\r\n\r\n\t\tthis.state = {\r\n\t\t\tlayout: this.getWindowSize()\r\n\t\t};\r\n\r\n\t\tthis.calculateTransition( props.transitions, this.state.layout.width )\r\n\r\n\t\tthis.getScreenStack = memoize( this.getScreenStack )\r\n\t\tthis._onBack = this._onBack.bind( this )\r\n\r\n\t\tthis.drawer = {\r\n\t\t\topen: () => this.drawerInstance.openDrawer(),\r\n\t\t\tclose: () => this.drawerInstance.closeDrawer(),\r\n\t\t}\r\n\r\n\t\tBackHandler.addEventListener( 'hardwareBackPress', this._onBack )\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\ttransitions: PropTypes.object,\r\n\t\tinterceptor: PropTypes.func,\r\n\t\tstrategy: PropTypes.string\r\n\t}\r\n\r\n\tstatic defaultProps = {\r\n\t\tstrategy: 'hash',\r\n\t\ttransitions: {\r\n\t\t\t0: mobileTransition,\r\n\t\t\t800: desktopTransition\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet router = this.router;\r\n\t\tif( !router ) return null;\r\n\t\t\r\n\t\tlet { DrawerComponent, interceptor, routes, transitions, ...props } = this.props\r\n\t\tlet { layout, indexes } = this.state\r\n\t\t\r\n\t\tlet transition = this.currentTransition\r\n\t\tlet breakPoint = this.currentBreakpoint\r\n\t\tlet modalTransition = this.getModalTransitions( transition )\r\n\t\tlet { stack, index } = this.getScreenStack( router.stack, router.activeIndex )\r\n\r\n\t\treturn (\r\n\t\t\t<SharedElementWrapper router={router} layout={layout}>\r\n\t\t\t\t<View style={ styles.windowWrapper }>\r\n\t\t\t\t\t<View style={styles.container} onLayout={ e => this._onLayout( e.nativeEvent.layout ) }>\r\n\t\t\t\t\t\t<DrawerWrapper ref={ component => this.drawerInstance = component }\r\n\t\t\t\t\t\t\trouter={router}\r\n\t\t\t\t\t\t\ttransition={modalTransition.drawer}\r\n\t\t\t\t\t\t\tbreakPoint={ breakPoint }\r\n\t\t\t\t\t\t\tindexes={indexes.stack}\r\n\t\t\t\t\t\t\tcollapsible={ transition.collapsibleDrawer }\r\n\t\t\t\t\t\t\tDrawer={ DrawerComponent }\r\n\t\t\t\t\t\t\tnavProps={ props } />\r\n\t\t\t\t\t\t<ScreenStack router={router}\r\n\t\t\t\t\t\t\tscreenTransition={transition}\r\n\t\t\t\t\t\t\tstackTransition={modalTransition.stack}\r\n\t\t\t\t\t\t\tstackIndexes={indexes.stack}\r\n\t\t\t\t\t\t\tbreakPoint={ breakPoint }\r\n\t\t\t\t\t\t\tstack={stack}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\tlayout={layout}\r\n\t\t\t\t\t\t\tdrawer={this.drawer}\r\n\t\t\t\t\t\t\tnavProps={props}/>\r\n\t\t\t\t\t\t<ModalWrapper router={router}\r\n\t\t\t\t\t\t\tstack={router.modal.stack}\r\n\t\t\t\t\t\t\tindex={router.modal.stack}\r\n\t\t\t\t\t\t\ttransition={modalTransition.modal}\r\n\t\t\t\t\t\t\tbreakPoint={ breakPoint }\r\n\t\t\t\t\t\t\tindexes={indexes.modal}\r\n\t\t\t\t\t\t\tlayout={layout}\r\n\t\t\t\t\t\t\tdrawer={this.drawer}\r\n\t\t\t\t\t\t\tnavProps={props} />\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t</SharedElementWrapper>\r\n\t\t)\r\n\t}\r\n\r\n\tcalculateTransition( transitions, width ){\r\n\t\tlet breakPoints = Object.keys( transitions ).sort( (a,b) => a - b )\r\n\t\tlet i = breakPoints.length\r\n\t\t\r\n\t\twhile( i-- > 0 ){\r\n\t\t\tif( width >= parseInt( breakPoints[i]) ){\r\n\t\t\t\tthis.currentTransition = transitions[ breakPoints[i] ]\r\n\t\t\t\tthis.currentBreakpoint = parseInt(breakPoints[i]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.currentTransition = transitions[ breakPoints[0] ]\r\n\t\tthis.currentBreakpoint = parseInt(breakPoints[0]);\r\n\t}\r\n\r\n\tgetModalTransitions( transition ){\r\n\t\tlet t = transition || this.currentTransition;\r\n\t\treturn t.modalTransition || modalTransition\r\n\t}\r\n\r\n\t// Takes the modal screens out of the stack\r\n\tgetScreenStack( routerStack, routerIndex ){\r\n\t\tlet stack = routerStack.slice();\r\n\t\tlet index = routerIndex;\r\n\t\tlet lastIndex = routerStack.length - 1;\r\n\t\tlet last = stack[ lastIndex ]\r\n\t\tlet options = last.Screen.urlstackOptions || {}\r\n\r\n\t\tif( options.modal ){\r\n\t\t\tstack.pop()\r\n\t\t\tif( index === lastIndex ){\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {stack, index}\r\n\t}\r\n\r\n\tstartRouter(){\r\n\t\trouter.setStrategy( this.props.strategy );\r\n\t\trouter.setRoutes( this.props.routes );\r\n\r\n\t\tlet interceptor = this.props.interceptor;\r\n\t\tif( interceptor ){\r\n\t\t\trouter.onBeforeChange( interceptor );\r\n\t\t}\r\n\r\n\t\tthis.fu = () => this.forceUpdate();\r\n\t\trouter.onChange( () => this.fu() );\r\n\t\trouter.start();\r\n\r\n\t\tthis.router = router;\r\n\r\n\t\tthis.showingModal = this.detectModal();\r\n\t\tthis.updateModalIndexes( this.showingModal );\r\n\t}\r\n\r\n\tgetWindowSize(){\r\n\t\tlet { width, height } = Dimensions.get('window')\r\n\t\treturn { \r\n\t\t\twidth, height, x: 0, y: 0\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.startRouter();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.fu = () => {}\r\n\t\tBackHandler.removeEventListener( 'hardwareBackPress', this._onBack )\r\n\t}\r\n\r\n\tcomponentDidUpdate( prevProps ){\r\n\t\tlet showModal = this.detectModal()\r\n\t\tif( this.showingModal !== showModal ){\r\n\t\t\tthis.showingModal = showModal;\r\n\t\t\tthis.updateModalIndexes( showModal );\r\n\t\t}\r\n\r\n\t\tif( prevProps.transistions !== this.props.transistions ){\r\n\t\t\tthis.calculateTransition( this.props.transitions, this.state.layout.width )\r\n\t\t}\r\n\t}\r\n\r\n\t_onLayout( layout ){\r\n\t\tthis.calculateTransition( this.props.transitions, layout.width )\r\n\t\tthis.setState( {layout} )\r\n\t}\r\n\r\n\t_onBack(){\r\n\t\tlet router = this.router;\r\n\t\tlet stack = router.stack;\r\n\t\tlet nextRoute;\r\n\t\tif( router.modal.active ){\r\n\t\t\tif( router.modal.activeIndex ){\r\n\t\t\t\tnextRoute = router.modal.stack[ router.modal.activeIndex - 1 ].path\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnextRoute = stack[ router.activeIndex ].location\r\n\t\t\t\tnextRoute = nextRoute.pathname + nextRoute.search\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if( router.activeIndex ){\r\n\t\t\tnextRoute = stack[ router.activeIndex - 1 ].path\r\n\t\t}\r\n\r\n\t\tif( nextRoute ){\r\n\t\t\trouter.navigate( nextRoute )\r\n\t\t\treturn true; // Prevents getting out of the app\r\n\t\t}\r\n\t}\r\n\r\n\tdetectModal(){\r\n\t\treturn this.router.modal.active;\r\n\t}\r\n\r\n\tupdateModalIndexes( showModal ){\r\n\t\tlet {indexes} = this.state\r\n\r\n\t\tif( !indexes ){\r\n\t\t\tindexes = {\r\n\t\t\t\tmodal: {showing: !!showModal, transition: new Animated.Value( showModal ? 1 : 0) },\r\n\t\t\t\tstack: {showing: !showModal, transition: new Animated.Value( showModal ? 0 : 1) }\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet transitions = this.getModalTransitions()\r\n\r\n\t\t\tindexes = {\r\n\t\t\t\tmodal: {showing: !!showModal, transition: indexes.modal.transition },\r\n\t\t\t\tstack: {showing: !showModal, transition: indexes.stack.transition }\r\n\t\t\t}\r\n\r\n\t\t\tAnimated.timing( indexes.modal.transition, {\r\n\t\t\t\ttoValue: showModal ? 1 : 0,\r\n\t\t\t\teasing: transitions.modal.easing,\r\n\t\t\t\tduration: transitions.modal.duration || 300,\r\n\t\t\t\tuseNativeDriver: !isWeb\r\n\t\t\t}).start()\r\n\r\n\t\t\tAnimated.timing( indexes.stack.transition, {\r\n\t\t\t\ttoValue: showModal ? 0 : 1,\r\n\t\t\t\teasing: transitions.stack.easing,\r\n\t\t\t\tduration: transitions.stack.duration || 300,\r\n\t\t\t\tuseNativeDriver: !isWeb\r\n\t\t\t}).start()\r\n\t\t}\r\n\r\n\t\tthis.setState({indexes})\r\n\t}\r\n}\r\n\r\nlet statusBarHeight = Platform.OS === 'android' ? StatusBar.currentHeight : 0\r\n\r\nlet styles = StyleSheet.create({\r\n\twindowWrapper: {\r\n\t\tpaddingTop: statusBarHeight,\r\n\t\tflex: 1,\r\n\t},\r\n\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tflexDirection: 'row',\r\n\t\toverflow: 'hidden'\r\n\t},\r\n})","import React, { Component } from 'react';\r\nimport { View, Platform } from 'react-native';\r\nimport { Context } from './utils/sharedElementContext';\r\nimport WrapperContext from './utils/wrapperContext';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst isWeb = Platform.OS === 'web';\r\n\r\nclass SharedElement extends Component {\r\n\tstatic propTypes = {\r\n\t\t// These properties are used by the TransitionElement\r\n\t\ttransition: PropTypes.oneOf([ PropTypes.object, PropTypes.func ]),\r\n\t\ttransitionRender: PropTypes.func,\r\n\t\ttransitionState: PropTypes.number,\r\n\r\n\t\t// This sharedId is used by the sharedElementContext to match what components\r\n\t\t// need to be shared\r\n\t\tsharedId: PropTypes.string,\r\n\t}\r\n\r\n\tstatic defaultTypes = {\r\n\t\r\n\t}\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tprops.se.register( this, props );\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<View style={ this.props.style }\r\n\t\t\t\tref=\"el\"\r\n\t\t\t\tonLayout={ () => this._onLayout() }\r\n\t\t\t\tpointerEvents=\"auto\">\r\n\t\t\t\t{ this.props.children }\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.se.unregister( this );\r\n\t}\r\n\r\n\tmeasure( offset ){\r\n\t\tthis.box = false;\r\n\r\n\t\tif( !isWeb && !this.layouted ){\r\n\t\t\t// We need the layout to calculate the measures properly in native\r\n\t\t\treturn setTimeout( () => this.measure( offset ) );\r\n\t\t}\r\n\t\t\r\n\t\tthis.refs.el && this.refs.el.measure( ( cx, cy, width, height, x, y ) => {\r\n\t\t\tthis.box = {\r\n\t\t\t\twidth, height,\r\n\t\t\t\tx: x - offset.x,\r\n\t\t\t\ty: y - offset.y\r\n\t\t\t};\r\n\t\t})\r\n\t}\r\n\r\n\t_onLayout(){\r\n\t\tthis.layouted = true;\r\n\t}\r\n}\r\n\r\nfunction ContextConsumerHOC( Component ){\r\n\treturn function SharedElementHOC( props ){\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Context.Consumer>\r\n\t\t\t\t{ se => (\r\n\t\t\t\t\t<WrapperContext.Consumer>\r\n\t\t\t\t\t\t{ wrapper => (\r\n\t\t\t\t\t\t\t<Component {...props} se={se} wrapper={wrapper} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</WrapperContext.Consumer>\r\n\t\t\t\t)}\r\n\t\t\t</Context.Consumer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst SharedElementWithContext = ContextConsumerHOC( SharedElement )\r\nexport default SharedElementWithContext\r\n"],"names":["memoize","fn","args","value","recalculate","fnArgs","apply","length","arguments","i","createId","Math","round","random","toString","nofn","bind","that","methods","forEach","m","styles","indexes","layout","scroll","width","translateX","inputRange","outputRange","opacity","easing","Easing","linear","duration","animatedStyles","transition","transformStyles","count","zIndex","abs","relative","Object","keys","key","styleKeys","warnKeys","console","warn","interpolate","transformKeys","type","warned","_typeof","push","transform","n","s","perspective","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","translateY","skeyX","skewY","stagger","animatedValue","gap","times","follower","Animated","Value","_value","timing","toValue","start","stagged","stage","attr","val","shifted","inputValue","animated","Context","React","createContext","ScreenWrapper","props","id","screenRef","createRef","setAnimatedLayout","Component","item","this","containerStyles","container","contextValue","View","style","onLayout","_this2","onReady","Provider","renderScreen","ScreenStack","router","drawer","breakPoint","navProps","Screen","location","ref","undefined","isTabs","screenTransition","tabTransition","stack","tabs","index","activeIndex","parentIndexes","nextProps","hasLayoutChanged","screen","isShowing","triggerCycleMethod","onUnmount","method","current","StyleSheet","create","overflow","position","top","left","bottom","right","isWeb","Platform","OS","defaultDuration","TransitionElement","_this","getIndexes","leaving","getTransition","transitionStyles","pointerEvents","renderChildren","customRenderer","transitionRender","entering","children","transitionStyle","defaultTransition","getDefaultTransition","defaultStyles","transitionState","screenIndexes","leavingBox","box","enteringBox","leavingTransition","getInterpolation","height","x","y","fromIndex","toIndex","fromValue","inverted","onTransitionEnd","PropTypes","object","number","mountedElements","register","instance","wrapper","unregister","splice","clbks","reMeasure","bp","screens","offset","el","measure","startTransition","leavingKeys","enteringKeys","clbk","TransitionLayer","state","elements","checkForTransitions","list","map","couples","getTransitionCouples","waitForReadyAndRender","setTimeout","couple","renderElement","setState","_this3","removeElement","clean","p","fromIds","toIds","sharedId","SharedElementWrapper","calculateIndexes","screenRefs","previousIndex","previousScreen","updateRelativeIndexes","readyScreens","e","updateLayout","renderScreens","stackIndexes","showing","getScreenTransition","_onScreenReady","_onScreenUnmount","nativeEvent","stackTransition","prevProps","needRelativeUpdate","context","transitionIndexes","nextIndexes","_this4","forceUpdate","prevShowing","nextShowing","getCurrentItem","oldIndexes","unusedIndexes","updated","parent","_this5","_this6","prevIndexes","prevItem","nextItem","prevIndex","nextIndex","_this7","useNativeDriver","getActiveScreens","concat","array","flex","ModalWrapper","content","shadowColor","shadowOpacity","shadowRadius","elevation","handleWidth","DrawerWrapper","layoutUpdated","drawerWidth","drawerPos","calculateDrawerIndex","open","overlayAnimStyle","drawerIndex","drawerMethods","openDrawer","close","closeDrawer","_drawerMethods","handle","overlay","Drawer","collapsible","onClick","collapsibleContainer","drawerStyles","collapsibleDrawer","snapPoints","Interactable","dragEnabled","horizontalOnly","boundaries","bounce","onDrag","animatedValueX","setValue","refs","dx","dy","di","_config","_interpolation","setVelocity","targetSnapPointId","flexDirection","paddingRight","backgroundColor","expander","leftColumn","stackAndDrawer","modal","createRouter","Navigator","getWindowSize","calculateTransition","transitions","getScreenStack","_onBack","drawerInstance","BackHandler","addEventListener","DrawerComponent","interceptor","routes","currentTransition","currentBreakpoint","modalTransition","getModalTransitions","windowWrapper","_onLayout","component","breakPoints","sort","a","b","parseInt","routerStack","routerIndex","slice","lastIndex","urlstackOptions","pop","setStrategy","strategy","setRoutes","onBeforeChange","fu","onChange","showingModal","detectModal","updateModalIndexes","Dimensions","get","startRouter","removeEventListener","showModal","transistions","nextRoute","active","path","pathname","search","navigate","func","string","mobileTransition","desktopTransition","statusBarHeight","StatusBar","currentHeight","paddingTop","SharedElement","se","layouted","cx","cy","ContextConsumerHOC","Consumer","WrapperContext","oneOf","SharedElementWithContext"],"mappings":";;;;;mlFAAO,SAASA,QAASC,OACpBC,EAAMC,WAEDC,EAAaC,UACrBH,EAAOG,EACPF,EAAQF,EAAGK,MAAO,KAAMD,UAIlB,eACDH,GAAQA,EAAKK,SAAWC,UAAUD,cAC/BH,EAAaI,mBAGjBC,EAAI,EACDA,EAAIP,EAAKK,QAAQ,IACnBL,EAAKO,KAAOD,UAAUC,UAClBL,EAAaI,WAErBC,WAGMN,GAIT,SAAgBO,kBACPC,KAAKC,MAAuB,IAAhBD,KAAKE,UAAsBC,SAAS,IAGzD,SAAgBC,QAET,SAASC,KAAMC,EAAMC,GAC3BA,EAAQC,QAAS,SAAAC,GAChBH,EAAKG,GAAKH,EAAKG,GAAGJ,KAAKC,KChCzB,kBAAe,CACdI,OAAQ,SAA+BC,EAASC,OAC3CC,EAASD,EAAOE,MAAQ,QACrB,CACNC,WAAY,CACXC,WAAY,EAAE,GAAI,EAAG,EAAG,EAAG,GAC3BC,YAAa,CAACJ,EAAQA,EAAQ,GAAIA,GAASA,IAE5CK,QAAS,CACRF,WAAY,EAAE,GAAI,EAAG,EAAG,GAAI,GAC5BC,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,MAI7BE,OAAQC,mBAAOC,OACfC,SAAU,cCfKC,eAAgBC,EAAYb,EAASC,OAChDF,EAAsC,mBAAtBc,EAAWd,OAAwBc,EAAWd,OAAQC,EAASC,GAAWY,EAAWd,OACpGA,IACJA,EAAS,QAGNa,EAAiB,GACjBE,EAAkB,UAElBd,EAAQe,QACXH,EAAeI,OAAShB,EAAQe,MAAQ1B,KAAK4B,IAAIjB,EAAQkB,WAG1DC,OAAOC,KAAMrB,GAASF,QAAS,SAAAwB,OAC1BxC,EAAQkB,EAAOsB,MAEfC,UAAUD,GACTE,SAASF,IACZG,QAAQC,mGAA2FJ,QAEhGxC,GAASA,EAAMwB,WAClBO,EAAgBS,GAAQrB,EAAQa,WAAWa,YAAa7C,GAGxD+B,EAAgBS,GAAQxC,OAGrB,GAAI8C,cAAcN,GAAM,KAExBO,EAAOD,cAAcN,GACrBQ,GAAS,EACThD,GAASA,EAAMyB,aAClBP,EAAOsB,GAAKf,YAAYT,QAAS,SAAAhB,GAC3BgD,GAAUC,QAAOjD,KAAU+C,IAC/BC,GAAS,EACTL,QAAQC,wFAAiFE,cAAcN,qBAAcA,uBAAiBxC,YAIxIiC,EAAgBiB,wBACdV,EAAMrB,EAAQa,WAAWa,YAAa7C,MAIxCiC,EAAgBiB,wBACdV,EAAMxC,SAKT2C,QAAQC,4DAAqDJ,UAI3DP,EAAgB7B,SACnB2B,EAAeoB,UAAYlB,GAGrBF,EAIR,IAAIU,UAAY,GACZC,SAAW,GACf,CAAC,OAAQ,QAAS,MAAO,UAAU1B,QAAS,SAAAwB,GAC3CC,UAAUD,GAAO,EACjBE,SAASF,GAAO,IAEjB,CAAC,QAAS,SAAU,UAAW,kBAAmB,gBAAgBxB,QAAS,SAAAwB,GAC1EC,UAAUD,GAAO,IAGlB,IAAIY,EAAI,SAAUC,EAAI,SAClBP,cAAgB,CACnBQ,YAAaF,EACbG,OAAQF,EAAGG,QAASH,EAAGI,QAASJ,EAAGK,QAASL,EAC5CM,MAAOP,EAAGQ,OAAQR,EAAGS,OAAQT,EAC7B7B,WAAY6B,EAAGU,WAAYV,EAC3BW,MAAOV,EAAGW,MAAOX,GAIlB,SAAgBY,QAASC,EAAeC,EAAKC,EAAOlD,OAC/CmD,EAAW,IAAIC,qBAASC,MAAOL,EAAcM,QACjDF,qBAASG,OAAQJ,EAAU,CAACvC,SAAU,EAAG4C,QAASR,IAAiBS,gBAE/DC,EAAU,CAAE7C,eAAe,CAACb,OAAAA,GAAS,CAACc,WAAYqC,gBAE7C/D,OACJuE,EAAQ,GACZvC,OAAOC,KAAMrB,GAASF,QAAS,SAAA8D,OAC1BC,EAAM7D,EAAO4D,MACbC,GAAOA,EAAIvD,WAAY,KACtBwD,EAAU,CACbxD,WAAY,GACZC,YAAasD,EAAItD,aAElBsD,EAAIvD,WAAWR,QAAS,SAAAiE,GACvBD,EAAQxD,WAAW0B,KAAM+B,EAAc3E,EAAI6D,KAE5CU,EAAMC,GAAQE,OAGdH,EAAMC,GAAQC,QAIZG,EAAWnD,eAAe,CAACb,OAAQ2D,GAAQ,CAAC7C,WAAYqC,IAC5DO,EAAQ1B,KAAMgC,IApBN5E,EAAI,EAAGA,EAAI8D,EAAO9D,MAAlBA,UAuBFsE,EC/GR,IAAMO,QAAUC,eAAMC,gBCKDC,qCACRC,wGACLA,KAEDC,GAAKjF,aAELkF,UAAYC,oBAEZC,kBAAmBJ,EAAMpE,QAASoE,EAAMnE,6BARJwE,2EAiBrCC,EAAOC,KAAKP,MAAMM,KAClBE,EAAkB,CACrB7E,OAAO8E,UACPF,KAAK/D,gBAEFkE,EAAe,CAClBjE,WAAY8D,KAAKP,MAAMvD,WACvBb,QAAS2E,KAAKP,MAAMpE,QACpBqE,GAAIK,EAAKrD,YAIT4C,6BAACd,qBAAS4B,MAAKC,MAAQJ,EAAkBK,SAAW,kBAAMC,EAAKd,MAAMe,QAAST,EAAKrD,OAClF4C,6BAACD,QAAQoB,UAASvG,MAAOiG,GACtBH,KAAKU,8DAOqFV,KAAKP,MAA9FM,IAAAA,KAAMY,IAAAA,YAAaC,IAAAA,OAAQ1E,IAAAA,WAAYb,IAAAA,QAASC,IAAAA,OAAQuF,IAAAA,OAAQC,IAAAA,WAAYC,IAAAA,SAC5EC,EAAqBjB,EAArBiB,OAAQC,EAAalB,EAAbkB,SACVC,EAAMF,aAAkBlB,gBAAYE,KAAKL,eAAYwB,SAErDpB,EAAKqB,OAEP9B,6BAAC0B,YAAOJ,OAAQA,EACfM,IAAMA,EACND,SAAUA,EACV5F,QAASA,EACTC,OAAQA,EACRuF,OAAUA,EACVC,WAAaA,GACRC,GACLzB,6BAACqB,GAAYC,OAASA,EACrBQ,QAAS,EACTC,iBAAmBnF,EAAWoF,eAAiBA,cAC/CC,MAAQxB,EAAKyB,KAAKD,MAClBE,MAAQ1B,EAAKyB,KAAKE,YAClBC,cAAgBtG,EAChBC,OAASA,EACTwF,WAAaA,EACbC,SAAWA,KAMdzB,6BAAC0B,YAAOJ,OAAQA,EACfM,IAAMA,EACND,SAAUA,EACV5F,QAASA,EACTC,OAAQA,EACRuF,OAAUA,EACVC,WAAaA,GACTC,8CAIY1F,EAASC,OACvBY,EAAa8D,KAAKP,MAAMvD,gBACvBD,eAAiBC,EAAaD,eAAgBC,EAAYb,EAASC,GAAW,qDAGzDsG,GACtB5B,KAAK6B,iBAAkBD,SACrB/B,kBAAmB+B,EAAUvG,QAASuG,EAAUtG,iDAIrCsG,MACZA,EAAUvG,aAETG,EAAUoG,EAAUtG,OAApBE,QACqBoG,EAAUvG,QAA/ByG,IAAAA,OAAQvF,IAAAA,WACYyD,KAAKP,MAAzBnE,IAAAA,OAAQD,IAAAA,eAGbG,IAAUF,EAAOE,OACjBsG,IAAWzG,EAAQyG,QACnBvF,IAAalB,EAAQkB,UACrByD,KAAKP,MAAMvD,aAAe0F,EAAU1F,2DAKjC8D,KAAKP,MAAMsC,WAA6C,IAAhC/B,KAAKP,MAAMpE,QAAQkB,eACzCyF,mBAAmB,2BAEpBvC,MAAMwC,UAAWjC,KAAKP,MAAMM,KAAKrD,iDAIlCsD,KAAKP,MAAMsC,WAA6C,IAAhC/B,KAAKP,MAAMpE,QAAQkB,eACzCyF,mBAAmB,wEAKpBA,mBAAmB,wEAInBA,mBAAmB,iEAGLE,OACfhB,EAAMlB,KAAKL,UACXuB,GAAOA,EAAIiB,SAAWjB,EAAIiB,QAAQD,IACrChB,EAAIiB,QAAQD,8BA/HM1C,6BAWC,CACpBgB,QAAS1F,KACTmH,UAAWnH,OAuHb,IAAIM,OAASgH,uBAAWC,OAAO,CAC9BnC,UAAW,CACVoC,SAAU,SACVC,SAAU,WACVC,IAAK,EAAGC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,EACnCtG,OAAO,MC3IHuG,MAAwB,QAAhBC,qBAASC,GACjBC,gBAAkB,IAEHC,yCAYPvD,wGACNA,KAEDpE,QAAU4H,EAAKC,eACf9E,cAAgB,IAAII,qBAASC,MAAOwE,EAAK5H,QAAQ8H,WACjDjH,WAAa+G,EAAKG,qCAjBsBtD,oEAsBrB,IAApBE,KAAK9D,kBACD,SAGJmH,EAAmB,CACtBjI,SAAO8E,UACPF,KAAKP,MAAM0D,QAAQ1D,MAAMY,MACzBpE,eAAgB+D,KAAK9D,WAAY,CAACA,WAAY8D,KAAK5B,wBAInDkB,6BAACd,qBAAS4B,MAAKC,MAAQgD,EAAmBC,cAAc,QACrDtD,KAAKuD,+DAML9D,EAAQO,KAAKP,MACb+D,EAAiB/D,EAAM0D,QAAQ1D,MAAMgE,wBAErCD,EACIA,EAAe,CACrBpF,cAAe4B,KAAK5B,cACpB0C,WAAYrB,EAAMqB,WAClB4C,SAAUjE,EAAMiE,SAChBP,QAAS1D,EAAM0D,UAIV1D,EAAM0D,QAAQ1D,MAAMkE,qDAOvBzH,EAHA0H,EAAkB5D,KAAKP,MAAM0D,QAAQ1D,MAAMvD,WAC3C2H,EAAoB7D,KAAK8D,0BAIE,mBAApBF,EAAgC,KACtCnE,EAAQO,KAAKP,MACjBvD,EAAa0H,EAAiB,CAC7B9C,WAAYrB,EAAMqB,WAClB4C,SAAUjE,EAAMiE,SAChBP,QAAS1D,EAAM0D,QACfU,mCAAwBA,UAIzB3H,EAAa0H,MAGK,IAAf1H,SACI,EAEH,QAAmBiF,IAAfjF,SACD2H,EAIH3H,EAAWF,WACfE,EAAWF,SAAW6H,EAAkB7H,cAGrCZ,EAASc,EAAWd,OACpB2I,EAAgBF,EAAkBzI,cAEjCA,IACJA,EAAS,GACTc,EAAWmE,MAAQjF,GAGpBoB,OAAOC,KAAKsH,GAAe7I,QAAQ,SAAAwB,QACdyE,IAAhB/F,EAAOsB,KACVtB,EAAOsB,GAAOqH,EAAcrH,MAIvBR,6CAIA,CACNwH,SAAU1D,KAAKP,MAAMiE,SAASjE,MAAMuE,iBAAmBhE,KAAKP,MAAMwE,cAAcP,SAChFP,QAASnD,KAAKP,MAAM0D,QAAQ1D,MAAMuE,iBAAmBhE,KAAKP,MAAMwE,cAAcd,8DAMrDnD,KAAK3E,QAA1B8H,IAAAA,QAASO,IAAAA,SACVQ,EAAalE,KAAKP,MAAM0D,QAAQgB,IAChCC,EAAcpE,KAAKP,MAAMiE,SAASS,IAClCE,EAAoBrE,KAAKP,MAAM4E,wBAE5B,CACNjJ,OAAQ,CACPI,MAAOwE,KAAKsE,iBAAkBnB,EAASO,EAAUQ,EAAW1I,MAAO4I,EAAY5I,OAC/E+I,OAAQvE,KAAKsE,iBAAkBnB,EAASO,EAAUQ,EAAWK,OAAQH,EAAYG,QACjF9I,WAAYuE,KAAKsE,iBAAkBnB,EAASO,EAAUQ,EAAWM,EAAGJ,EAAYI,GAChFxG,WAAYgC,KAAKsE,iBAAkBnB,EAASO,EAAUQ,EAAWO,EAAGL,EAAYK,IAEjFzI,SAAWqI,GAAqBA,EAAkBrI,UAAa+G,0DAI/C2B,EAAWC,EAASC,EAAWhG,MAC5CgG,IAAchG,EAAU,OAAOgG,MAC/BC,EAAWH,EAAYC,QACpB,CACNjJ,WAAYmJ,EAAW,CAAEF,EAASD,GAAc,CAAEA,EAAWC,GAC7DhJ,YAAakJ,EAAW,CAAEjG,EAASgG,GAAc,CAAEA,EAAWhG,4DAKvC,IAApBoB,KAAK9D,YAERsC,qBAASG,OAAQqB,KAAK5B,cAAe,CACpCQ,QAASoB,KAAK3E,QAAQqI,SACtB1H,SAAUgE,KAAK9D,WAAWF,UAAY+G,kBAEpClE,MAAO,kBAAM0B,EAAKd,MAAMqF,6CAhJT9B,8BACD,CAElBU,SAAUqB,UAAUC,OAEpB7B,QAAS4B,UAAUC,OAEnBlE,WAAYiE,UAAUE,OAEtBhB,cAAec,UAAUC,SA6I3B,IAAM5J,SAASgH,uBAAWC,OAAO,CAChCnC,UAAW,CAAEqC,SAAU,WAAYD,SAAU,SAAUE,IAAK,EAAGC,KAAM,KC1JhEpD,UAAUC,eAAMC,cAAc,iBAGhC2F,gBAAkB,GAItB,SAASC,SAASC,EAAU3F,OACvB4F,EAAU5F,EAAM4F,QAAQ3F,GACvBwF,gBAAgBG,KACpBH,gBAAgBG,GAAW,IAE5BH,gBAAgBG,GAASjI,KAAKgI,GAI/B,SAASE,WAAWF,OACfC,EAAUD,EAAS3F,MAAM4F,QAAQ3F,GACjC6B,EAAQ2D,gBAAiBG,MACxB9D,GAEDA,UACC/G,EAAI+G,EAAMjH,OACPE,KAAM,GACR+G,EAAM/G,KAAO4K,GAChB7D,EAAMgE,OAAO/K,EAAG,GAOpB,IAIIsG,WAAYmD,cAJZuB,MAAQ,GASZ,SAASC,UAAWnK,EAAQoK,EAAIrK,OAC3BsK,EAAUnJ,OAAOC,KAAMyI,sBACvBS,EAAQrL,OAAS,IAErBwG,WAAa4E,EACbzB,cAAgB5I,MAEZuK,EAAS,CAAEpB,EAAGlJ,EAAOkJ,EAAGC,EAAGnJ,EAAOmJ,GACtCkB,EAAQzK,QAAS,SAAAwB,GAChBwI,gBAAgBxI,GAAKxB,QAAS,SAAA2K,GAC7BA,EAAGC,QAASF,QAOf,SAASG,gBAAiBC,EAAaC,EAActB,EAASN,GAC7DmB,MAAMtK,QAAS,SAAAgL,UAAQA,EAAMF,EAAaC,EAActB,EAASN,SAG5D8B,uCACQ1G,wGACLA,KACF2G,MAAQ,CACZC,SAAU,MAENC,oBAAsBrD,EAAKqD,oBAAoBvL,qDANxB+E,oEAUxBxE,EAAS0E,KAAKP,MAAMnE,OACpB6I,EAAM,CACT3B,IAAKlH,EAAOmJ,GAAK,EACjB9B,OAAQrH,EAAOkJ,GAAK,GAAKlJ,EAAOE,MAChCiH,KAAMnH,EAAOkJ,GAAK,EAClB9B,QAASpH,EAAOmJ,GAAK,GAAKnJ,EAAOiJ,QAG9B8B,EAAWrG,KAAKoG,MAAMC,SACtBE,EAAO/J,OAAOC,KAAM4J,GAAWG,IAAK,SAAA9G,UAAM2G,EAAS3G,YAGtDJ,6BAACc,kBAAKC,MAAQ,CAACjF,SAAO8E,UAAWiE,GAAOb,cAAc,QACnDiD,+CAKeN,EAAcD,EAAarB,EAASN,OACnDoC,EAAUzG,KAAK0G,qBAAsBT,EAAcD,GAElDS,EAAQnM,cAER+J,kBAAoBA,OAEpBsC,sBAAuBF,EAAS9B,kDAGf8B,EAAS9B,kBAE3BnK,EAAIiM,EAAQnM,OACTE,KAAM,OACPiM,EAAQjM,GAAG2I,QAAQgB,MAAQsC,EAAQjM,GAAGkJ,SAASS,WAE5CyC,WAAY,kBAAMrG,EAAKoG,sBAAuBF,EAAS9B,SAI5D0B,EAAW,GACfI,EAAQvL,QAAS,SAAA2L,OACZnH,EAAKjF,WAET4L,EAAU3G,GAAOa,EAAKuG,cAAeD,EAAQnH,UAGzCqH,SAAS,CAACV,SAAAA,4CAGoB3G,cAApByD,IAAAA,QAASO,IAAAA,gBAEvBpE,6BAAC0D,mBAAkBtG,IAAMgD,EACxByD,QAAUA,EACVO,SAAWA,EACX5C,WAAaA,WACbmD,cAAgBA,cAChBI,kBAAoBrE,KAAKqE,mBAAqBrE,KAAKqE,kBAAmBvD,YACtEgE,gBAAkB,kBAAMkC,EAAKC,cAAcvH,4CAI/BA,OACV2G,mBAAgBrG,KAAKoG,MAAMC,iBACxBA,EAAS3G,QACXqH,SAAS,CAACV,SAAAA,uCAGJ5G,OACPyH,EAAQ,UAEZ1K,OAAOC,KAAMgD,GAAQvE,QAAS,SAAAiM,GACnB,OAANA,GAAoB,YAANA,GAAyB,aAANA,GAA0B,qBAANA,IACxDD,EAAOC,GAAM1H,EAAM0H,MAIdD,+CAGcE,EAASC,OAC1BlE,EAAU,GACVsD,EAAU,UAEdW,EAAQlM,QAAS,SAAAwE,GAChBwF,gBAAgBxF,IAAOwF,gBAAgBxF,GAAIxE,QAAS,SAAA2K,GACnD1C,EAAS0C,EAAGpG,MAAM6H,UAAazB,MAIjCwB,EAAMnM,QAAS,SAAAwE,GACdwF,gBAAgBxF,IAAOwF,gBAAgBxF,GAAIxE,QAAS,SAAA2K,GAC9C1C,EAAQ0C,EAAGpG,MAAM6H,WACrBb,EAAQrJ,KAAK,CACZ+F,QAASA,EAAS0C,EAAGpG,MAAM6H,UAC3B5D,SAAUmC,QAMPY,8CAKPjB,MAAMpI,KAAM4C,KAAKsG,4EAIb9L,EAAIgL,MAAMlL,OACPE,KAAM,GACRgL,MAAMhL,KAAOwF,KAAKsG,qBAErBd,MAAMD,OAAQ/K,EAAI,YAMhBY,SAASgH,uBAAWC,OAAO,CAChCnC,UAAW,CACVqC,SAAU,WACVlG,OAAQ,OAIJkL,qBAAuB,SAAA9H,UAC5BH,6BAACD,UAAQoB,UAASvG,MAAO,CAAEiL,SAAAA,SAAUG,WAAAA,WAAYS,gBAAAA,gBAAiBN,UAAAA,YAC/DhG,EAAMkE,SACRrE,6BAAC6G,iBAAgBvF,OAASnB,EAAMmB,OAAStF,OAASmE,EAAMnE,WCrMpDsH,QAAwB,QAAhBC,qBAASC,GAEFnC,mCAkBPlB,gGACLA,QAED8B,EAAiB9B,EAAjB8B,MAAOE,EAAUhC,EAAVgC,eAER2E,MAAQ,CACZ/K,QAAS4H,EAAKuE,iBAAiB,GAAIjG,EAAOE,GAC1CnG,QAAQ,KAGJmM,WAAa,KAEbC,cAAgBjG,IAChBkG,eAAiBpG,EAAME,GAAO/E,MAG9B8K,iBAAmBzN,QAASkJ,EAAKuE,iBAAiBzM,mCAClD6M,sBAAwB7N,QAASkJ,EAAK2E,sBAAsB7M,mCAI5D8M,aAAe,GAEpB9M,+BAAY,CAAC,iBAAkB,0CAzCQ+E,6EA6CfE,KAAKP,MAAvB8B,IAAAA,MAAOX,IAAAA,OACTX,EAAkB,CACrB7E,SAAO8E,UACPF,KAAK/D,uBAILqD,6BAACd,qBAAS4B,MAAKC,MAAOJ,GACrBX,6BAACc,kBAAKC,MAAOjF,SAAOmG,MAAOjB,SAAW,SAAAwH,UAAKvH,EAAKwH,aAAaD,KAC1D9H,KAAKgI,cAAcpH,EAAQW,2CAMlBX,EAAQW,gBACIvB,KAAKoG,MAAzB9K,IAAAA,OAAQD,IAAAA,WAGTC,OAEDqK,EAAU,GACV5D,EAAY/B,KAAKP,MAAMwI,aAAaC,eACxC3G,EAAMrG,QAAS,SAAA6E,OACVrD,EAAMqD,EAAKrD,IAEVrB,EAAQqB,KAKRsK,EAAKS,WAAW/K,KACpBsK,EAAKS,WAAW/K,GAAOkD,mBAGxB+F,EAAQvI,KACPkC,6BAACE,eAAcO,KAAOA,EACrBmB,IAAM8F,EAAKS,WAAW/K,GACtBiE,YAAcA,EACdC,OAASA,EACTvF,QAAUA,EAASqB,GACnBpB,OAASA,EACTY,WAAa8K,EAAKmB,oBAAqBpI,EAAKiB,QAC5CR,QAAUwG,EAAKoB,eACfnG,UAAY+E,EAAKqB,iBACjBxH,OAASmG,EAAKvH,MAAMoB,OACpBC,WAAakG,EAAKvH,MAAMqB,WACxBpE,IAAMA,EACNqF,UAAYA,EACZhB,SAAWiG,EAAKvH,MAAMsB,eAIlB4E,+CAGa3E,MACgB,mBAAzBA,EAAOoC,cAA8B,KAC3ClH,EAAa8E,EAAOoC,cAAepD,KAAKP,MAAMqB,gBAC/B,IAAf5E,EAAuB,UACvBA,EAAa,OAAOA,SAGlB8D,KAAKP,MAAM4B,sDAGLyG,QACRf,SAAS,CAAEzL,OAAQwM,EAAEQ,YAAYhN,cACjCW,eAAiBA,eAAe+D,KAAKP,MAAM8I,gBAAiBvI,KAAKP,MAAMwI,aAAcH,EAAEQ,YAAYhN,mDAGrFkN,gBACsBxI,KAAKP,MAAxC8B,IAAAA,MAAOE,IAAAA,MAAOJ,IAAAA,iBAChBhG,EAAU2E,KAAKwH,iBAAkBxH,KAAKoG,MAAM/K,QAASkG,EAAOvB,KAAK0H,cAAerG,MAGhFhG,IAAY2E,KAAKoG,MAAM/K,cACrB0L,SAAU,CAAE1L,QAAAA,IAKd2E,KAAKyI,mBAAoB,MAGvBC,QAAQjD,UACZzF,KAAKP,MAAMnE,OACX0E,KAAKP,MAAMqB,WACXd,KAAK2I,wBAIDA,mBAAoB,MAGrBC,EAAc5I,KAAK4H,sBAAsBvM,EAASkG,EAAOE,GAG7DmF,WAAY,WACXiC,EAAKJ,oBAAqB,EAC1BI,EAAK9C,gBAAiB8C,EAAKzC,MAAM/K,QAASuN,GAC1CC,EAAK9B,SAAS,CAAE1L,QAASuN,MAMvBnH,IAAUzB,KAAK0H,eAAiBnG,EAAME,GAAO/E,MAAQsD,KAAK2H,sBACxDgB,kBAAoB,CACxBxF,QAASnD,KAAK0H,cACdhE,SAAUjC,QAENgH,oBAAqB,OACrBf,cAAgBjG,OAChBkG,eAAiBpG,EAAME,GAAO/E,SAC9BoM,mBAGFC,EAAcP,EAAUP,aAAaC,QACrCc,EAAchJ,KAAKP,MAAMwI,aAAaC,QACtCa,IAAgBC,QACdhH,mBAAoBhC,KAAKiJ,iBAAkB,uBAE5CF,GAAeC,QACdhH,mBAAoBhC,KAAKiJ,iBAAkB,+DAQhCC,EAAY3H,EAAOG,cAChCtF,EAAQmF,EAAMjH,OACde,mBAAe6N,GACfC,mBAAqBD,GACrBE,GAAU,SAEd7H,EAAMrG,QAAS,WAAUV,OAAPkC,IAAAA,OACbyM,EAAczM,iBACHyM,EAAczM,GAG7B0M,GAAU,EAEV/N,EAASqB,GAAQ,CAChBoF,OAAQtH,EACR4B,MAAOA,EACPG,SAAUmF,EAAclH,EACxB0B,WAAY,IAAIsC,qBAASC,MAAOiD,EAAclH,GAC9C6O,OAAQC,EAAK7J,MAAMkC,iBAKrBnF,OAAOC,KAAM0M,GAAgBjO,QAAS,SAAAwB,UAC9BrB,EAAQqB,UACR4M,EAAK7B,WAAW/K,GACvB0M,GAAU,IAGJA,EAAU/N,EAAU6N,gDAOLA,EAAY3H,EAAOG,cACrCrG,mBAAgB6N,GAChB9M,EAAQmF,EAAMjH,cAElBiH,EAAMrG,QAAS,WAAQV,OAANkC,IAAAA,IACZ+E,EAAQ,CACXK,OAAQtH,EACR4B,MAAOA,EACPG,SAAUmF,EAAclH,EACxB0B,WAAYb,EAAQqB,GAAKR,WACzBmN,OAAQE,EAAK9J,MAAMkC,eAGpBtG,EAAQqB,GAAO+E,IAGTpG,0CAGSmO,EAAaZ,OACzBa,EAAUC,EAAU/E,cAGnBlF,MAAM8B,MAAMrG,QAAS,SAAA6E,OACnBrD,EAAgBqD,EAAhBrD,IAAKsE,EAAWjB,EAAXiB,OAEP2I,EAAYH,EAAY9M,GACxBkN,EAAYhB,EAAYlM,MAED,IAAvBiN,EAAUpN,WACbkN,EAAW1J,GAEe,IAAvB6J,EAAUrN,WACbmN,EAAW3J,EACX4E,EAAUgF,EAAUpN,UAGjBoN,GAAaC,GAAaD,EAAUpN,WAAaqN,EAAUrN,SAAU,KACpEL,EAAa2N,EAAK1B,oBAAqBnH,GAE3CxC,qBAASG,OAAQiL,EAAU1N,WAAY,CACtC0C,QAASgL,EAAUrN,SACnBV,OAAQK,EAAWL,OACnBG,SAAUE,EAAWF,UAAY,IACjC8N,iBAAkBlH,UAChB/D,WAKD4K,GAAYC,IACX1J,KAAKP,MAAMwI,aAAaC,eACtBlG,mBAAoByH,EAAU,2BAC9BzH,mBAAoB0H,EAAU,4BAG/BhB,QAAQ3C,gBACZ/F,KAAK+J,iBAAiBN,GACtBzJ,KAAK+J,iBAAiBL,GACtB/E,EACA8E,EAASzI,OAAOoC,yDAKDrD,OACbtD,EAAO,CAACsD,EAAKrD,KACb8E,EAAOzB,EAAKyB,YAEZA,IACH/E,EAAOA,EAAKuN,OACXhK,KAAK+J,iBAAkBvI,EAAKD,MAAMC,EAAKE,gBAIlCjF,mDAID8E,EAAQvB,KAAKP,MAAM8B,MACrB/G,EAAI+G,EAAMjH,OACRe,EAAU2E,KAAKoG,MAAM/K,QAEpBb,KAAM,GAAG,KACXuF,EAAOwB,EAAM/G,MACoB,IAAjCa,EAAS0E,EAAKrD,KAAMH,gBAChBwD,8CAKUA,EAAMmC,MACpBnC,OAEDmB,EAAMlB,KAAKyH,WAAY1H,EAAKrD,KAC5BwE,GAAOA,EAAIiB,SAAWjB,EAAIiB,QAAQD,IACrChB,EAAIiB,QAAQD,6CAIExC,QACVmI,aAAcnI,GAAO,2CAGTA,UACVM,KAAK6H,aAAanI,4BA9TNiB,wBACD,CAClBC,OAAQmE,UAAUC,OAClB3D,iBAAkB0D,UAAUC,OAC5BuD,gBAAiBxD,UAAUC,OAC3BiD,aAAclD,UAAUC,OACxBzD,MAAOwD,UAAUkF,MACjBxI,MAAOsD,UAAUE,OACjB3J,OAAQyJ,UAAUC,yBARCrE,2BAWE,CACrB4H,gBAAiB,GACjBN,aAAc,qBAbKtH,0BAgBCtB,WAkTtB,IAAIjE,SAASgH,uBAAWC,OAAO,CAC9BnC,UAAW,CACVgK,KAAM,EACN3H,SAAU,WACVlG,OAAQ,GAETwE,OAAQ,GACRU,MAAO,CACNgD,OAAQ,OAAQ/I,MAAO,UC/UJ2O,oCACR1K,wGACLA,KACDI,kBAAmBJ,EAAMpE,QAASoE,EAAMnE,6BAHLwE,oEAapCsK,EANAnK,EAAkB,CACrB7E,SAAO8E,UACPF,KAAK/D,gBAGF8D,EAAOC,KAAKP,MAAM8B,MAAM,UAGxBxB,IACHqK,EACC9K,6BAACS,EAAKiB,iBAAOJ,OAASZ,KAAKP,MAAMmB,OAChCC,OAASb,KAAKP,MAAMoB,OACpBxF,QAAU2E,KAAKP,MAAMpE,QACrBC,OAAS0E,KAAKP,MAAMnE,OACpB2F,SAAWlB,EAAKkB,SAChBH,WAAad,KAAKP,MAAMqB,YACpBd,KAAKP,MAAMsB,YAKjBzB,6BAACd,qBAAS4B,MAAKC,MAAQJ,GACpBmK,yCAKUrK,UACVA,GAAQA,IAASC,KAAKD,YACpBA,KAAOA,GAENC,KAAKD,+CAGM1E,EAASC,QACtBW,eAAiBA,eAAgB+D,KAAKP,MAAMvD,WAAYb,EAASC,qDAG5CsG,GACtB5B,KAAK6B,iBAAkBD,SACrB/B,kBAAmB+B,EAAUvG,QAASuG,EAAUtG,iDAIrCsG,MACZA,EAAUvG,aAETG,EAAUoG,EAAUtG,OAApBE,MACA0M,EAAYtG,EAAUvG,QAAtB6M,UACoBlI,KAAKP,MAAzBnE,IAAAA,OAAQD,IAAAA,eAGbG,IAAUF,EAAOE,OACjB0M,IAAY7M,EAAQ6M,kBAKnB9M,SAASgH,uBAAWC,OAAO,CAC9BnC,UAAW,CACVoC,SAAU,SACVC,SAAU,WACV/G,MAAO,OAAQ+I,OAAQ,OACvB/B,IAAK,EAAGC,KAAM,EACdpG,OAAO,GACPgO,YAAa,OACbC,cAAe,GACfC,aAAc,GACdC,UAAW,KC3ETC,YAAc,GAEGC,qCACRjL,iGACLA,KAGDkL,eAAgB,IAChBC,YAAc,MAEdC,UAAY,IAAIrM,qBAASC,MAAM,KAC/BqM,yBAEA1E,MAAQ,CACZ2E,MAAM,KAGFC,iBAAmB,CACvB3N,UAAW,CAAC,CAAC5B,WAAYwH,EAAKgI,YAAYlO,YAAY,CACrDrB,WAAY,CAAC,EAAG,IAAM,GACtBC,YAAa,EAAG,IAAO,EAAG,OAE3BC,QAASqH,EAAKgI,YAAYlO,YAAY,CACrCrB,WAAY,CAAC,EAAE,EAAE,EAAE,GACnBC,YAAa,CAAC,EAAE,EAAE,GAAG,WAIjBuP,EAAgB,CACrBH,KAAM,kBAAM9H,EAAKkI,cACjBC,MAAO,kBAAMnI,EAAKoI,yBAEdC,eAAiBJ,uBA9BmBpL,oEAmCrCyL,EAAQC,WADoCxL,KAAKP,MAA/CgM,IAAAA,OAAQ7K,IAAAA,OAAQ8K,IAAAA,YAAa3K,IAAAA,SAE/B2K,IACHH,EAASjM,6BAACc,kBAAKC,MAAQjF,SAAOmQ,SAC9BC,EACAlM,6BAACd,qBAAS4B,MAAKC,MAAQ,CAACjF,SAAOoQ,QAASxL,KAAKgL,kBAC5CW,QAAU,kBAAMpL,EAAK8K,sBAKnB7P,EAAQwE,KAAKoG,MAAM2E,KAA0B,EAAnB/K,KAAK4K,YAAkB5K,KAAK4K,YAAcH,YACpEhI,EAAOzC,KAAK2K,eAAkB3K,KAAK4K,aAAe,IAElD3K,EAAkB,CACrB7E,SAAO8E,UACPwL,GAAetQ,SAAOwQ,qBACtBF,GAAe,CAAClQ,MAAAA,EAAOiH,KAAAA,GACvBzC,KAAK/D,gBAGF4P,EAAe,CAClBzQ,SAAOyF,OACP6K,GAAetQ,SAAO0Q,mBAGnBC,EAAa,CAChB,CAAEvH,EAAG,EAAG9E,GAAI,UAAY,CAAC8E,EAAGxE,KAAK4K,YAAalL,GAAI,gBAIlDJ,6BAACd,qBAAS4B,MAAKC,MAAQJ,GACpBuL,EACFlM,6BAAC0M,aAAa5L,MAAK6L,cAAgBP,EAClCxK,IAAI,SACJgL,gBAAiB,EAAOH,WAAaA,EACrCI,WAAY,CAACxJ,MAAO3C,KAAK4K,YAAawB,OAAQ,GAC9CC,OAAS,SAAAvE,UAAKvH,EAAK8L,OAAQvE,IAC3BwE,eAAiBtM,KAAK6K,WACtBvL,6BAACc,kBAAKC,MAAQwL,EAAe3K,IAAI,SAASZ,SAAW,SAAAwH,UAAKvH,EAAKwH,aAAaD,KAC3ExI,6BAACmM,YAAO7K,OAASA,EAChBC,OAASb,KAAKsL,eACdhQ,OAAS0E,KAAKP,MAAMnE,OACpBwF,WAAad,KAAKP,MAAMqB,WACxBzF,QAAS,CAAEa,WAAY8D,KAAKiL,cACvBlK,IACJwK,0CAOOzD,OACRxM,EAAUwM,EAAEQ,YAAZhN,YAEAqP,eAAgB,OAChB1O,eAAiBA,eAAe+D,KAAKP,MAAMvD,WAAY8D,KAAKP,MAAMpE,QAASC,QAC3EsP,YAActP,EAAOE,MAAQiP,iBAC7BK,4BACAhC,yDAGaN,cACdA,EAAUkD,cAAgB1L,KAAKP,MAAMiM,kBACnCb,UAAU0B,SAAS,GAErB/D,EAAU1H,aAAed,KAAKP,MAAMqB,iBAClC0L,KAAKlR,OAAOwK,QAAS,SAAC2G,EAAIC,EAAIlR,EAAO+I,EAAQC,EAAGC,GACpDuC,EAAKe,aAAa,CAAEO,YAAa,CAAChN,OAAQ,CAACE,MAAAA,EAAO+I,OAAAA,EAAQC,EAAAA,EAAGC,EAAAA,2DAM3DkI,EAAK3M,KAAKiL,YACVxJ,EAAQzB,KAAK6K,UAAU9N,YAAY,CACtCrB,WAAY,CAAC,EAAGsE,KAAK4K,aACrBjP,YAAa,CAAC,EAAG,KAGdgR,GACHA,EAAGC,QAAUnL,EAAMmL,QACnBD,EAAGE,eAAiBpL,EAAMoL,qBAGrB5B,YAAcxJ,0CAKfzB,KAAKP,MAAMiM,cAAe1L,KAAKoG,MAAM2E,UAEtClK,EAASb,KAAKwM,KAAK3L,YAClBkG,SAAS,CAACgE,MAAM,IACrBlK,GAAUA,EAAOiM,YAAY,CAACtI,EAAG,gDAI5BxE,KAAKP,MAAMiM,aAAgB1L,KAAKoG,MAAM2E,UAEvClK,EAASb,KAAKwM,KAAK3L,YAClBkG,SAAS,CAACgE,MAAM,IACrBlK,GAAUA,EAAOiM,YAAY,CAACtI,GAAI,sCAG3BsD,GACHA,EAAEQ,cAAcR,EAAIA,EAAEQ,aAEV,UAAZR,EAAE1B,WACAW,SAAS,CAACgE,MAAM,IAED,QAAZjD,EAAE1B,OAA2C,WAAxB0B,EAAEiF,wBAC1BhG,SAAS,CAACgE,MAAM,aAKpB3P,SAASgH,uBAAWC,OAAO,CAC9BnC,UAAW,CACV8M,cAAe,OAEhBpB,qBAAsB,CACnBrJ,SAAU,WACZC,IAAK,EAAGE,OAAQ,EAChBrG,OAAQ,KAETwE,OAAQ,CAEP2B,IAAK,EAAGC,KAAM,EACd8B,OAAQ,OAAQ/I,MAAO,OACvB0O,KAAM,GAEP4B,kBAAmB,CAChBrJ,KAAM,EACNjH,MAAO,OACP0O,KAAM,EACR3H,SAAU,WACVlG,OAAQ,IACR4Q,aAAcxC,aAEfc,OAAQ,CACP/P,MAAOiP,YACPjI,IAAK,EAAGE,OAAQ,EAAGC,MAAO,EAE1BJ,SAAU,WACVlG,OAAQ,IAETmP,QAAS,CACR0B,gBAAiB,QACjB3I,OAAQ,OACR/I,MAAO,OACP+G,SAAU,YAEX4K,SAAU,CACT5K,SAAU,WACVgC,OAAQ,OACR/B,IAAK,EAAGC,KAAM,EAAGC,OAAQ,uBCpMZ,CACdtH,OAAQ,SAAkCC,EAASC,OAC9C8R,EAAa/R,EAAQyG,OAAS,IAAM,QACjC,CACNtG,MAAO,CACNE,WAAY,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAC/BC,YAAa,CAAE,EAAG,EAAGL,EAAOE,MAAQ4R,EAAY,IAAK,EAAG,IAGzD3R,WAAY,CACXC,WAAY,EAAG,GAAI,EAAG,EAAG,EAAG,GAC5BC,YAAa,CAAEL,EAAOE,MAAOF,EAAOE,MAAO4R,EAAY,EAAG,MAI7DvR,OAAQC,mBAAOC,OACfC,SAAU,sBClBI,CACdZ,OAAQ,SAAkCC,EAASC,SAC3C,CACNG,WAAY,CACXC,WAAY,EAAG,GAAI,EAAG,EAAG,GACzBC,YAAa,CAAEL,EAAOE,MAAOF,EAAOE,MAAO,EAAG,IAE/CI,QAAS,CACRF,WAAY,EAAG,GAAI,EAAG,EAAG,GAAI,GAC7BC,YAAa,CAAE,EAAG,EAAG,EAAG,EAAG,IAE5BkC,MAAO,CACNnC,WAAY,EAAG,EAAG,EAAG,EAAG,GACxBC,YAAa,CAAE,EAAG,EAAG,GAAI,OAI5BK,SAAU,IACV8P,mBAAmB,GChBhBuB,eAAiB,CACpBjS,OAAQ,CACP4C,WAAY,CACXtC,WAAY,CAAE,EAAG,GACjBC,YAAa,EAAG,IAAK,IAEtBC,QAAS,CACRF,WAAY,CAAE,EAAG,GACjBC,YAAa,CAAE,EAAG,KAGpBE,OAAQC,mBAAOC,OACfC,SAAU,qBAGI,CACduF,MAAO8L,eACPxM,OAAQwM,eACRC,MAAM,CACLlS,OAAQ,SAAiCC,EAASC,SAC1C,CACN0C,WAAY,CACXtC,WAAY,CAAE,EAAG,GACjBC,YAAa,CAAEL,EAAOiJ,OAAQ,MAIjC1I,OAAQC,mBAAOC,OACfC,SAAU,MCjBN4G,QAAwB,QAAhBC,qBAASC,GAEnBlC,OAAS2M,eAGQC,iCACP/N,wGACLA,KAEF2G,MAAQ,CACZ9K,OAAQ2H,EAAKwK,mBAGTC,oBAAqBjO,EAAMkO,YAAa1K,EAAKmD,MAAM9K,OAAOE,SAE1DoS,eAAiB7T,QAASkJ,EAAK2K,kBAC/BC,QAAU5K,EAAK4K,QAAQ9S,kCAEvB8F,OAAS,CACbkK,KAAM,kBAAM9H,EAAK6K,eAAe3C,cAChCC,MAAO,kBAAMnI,EAAK6K,eAAezC,gBAGlC0C,wBAAYC,iBAAkB,oBAAqB/K,EAAK4K,8BAlBnB/N,2EAoCjCc,EAASZ,KAAKY,WACbA,EAAS,OAAO,WAEiDZ,KAAKP,MAArEwO,IAAAA,gBAAsDxO,KAArCyO,cAAaC,SAAQR,oGAClB3N,KAAKoG,MAAzB9K,IAAAA,OAAQD,IAAAA,QAEVa,EAAa8D,KAAKoO,kBAClBtN,EAAad,KAAKqO,kBAClBC,EAAkBtO,KAAKuO,oBAAqBrS,KACzB8D,KAAK4N,eAAgBhN,EAAOW,MAAOX,EAAOc,aAA3DH,IAAAA,MAAOE,IAAAA,aAGZnC,6BAACiI,sBAAqB3G,OAAQA,EAAQtF,OAAQA,GAC7CgE,6BAACc,kBAAKC,MAAQjF,SAAOoT,eACpBlP,6BAACc,kBAAKC,MAAOjF,SAAO8E,UAAWI,SAAW,SAAAwH,UAAKvH,EAAKkO,UAAW3G,EAAEQ,YAAYhN,UAC5EgE,6BAACoL,eAAcxJ,IAAM,SAAAwN,UAAanO,EAAKuN,eAAiBY,GACvD9N,OAAQA,EACR1E,WAAYoS,EAAgBzN,OAC5BC,WAAaA,EACbzF,QAASA,EAAQkG,MACjBmK,YAAcxP,EAAW4P,kBACzBL,OAASwC,EACTlN,SAAWtB,IACZH,6BAACqB,aAAYC,OAAQA,EACpBS,iBAAkBnF,EAClBqM,gBAAiB+F,EAAgB/M,MACjC0G,aAAc5M,EAAQkG,MACtBT,WAAaA,EACbS,MAAOA,EACPE,MAAOA,EACPnG,OAAQA,EACRuF,OAAQb,KAAKa,OACbE,SAAUtB,IACXH,6BAAC6K,cAAavJ,OAAQA,EACrBW,MAAOX,EAAO0M,MAAM/L,MACpBE,MAAOb,EAAO0M,MAAM/L,MACpBrF,WAAYoS,EAAgBhB,MAC5BxM,WAAaA,EACbzF,QAASA,EAAQiS,MACjBhS,OAAQA,EACRuF,OAAQb,KAAKa,OACbE,SAAUtB,mDAOKkO,EAAanS,WAC7BmT,EAAcnS,OAAOC,KAAMkR,GAAciB,KAAM,SAACC,EAAEC,UAAMD,EAAIC,IAC5DtU,EAAImU,EAAYrU,OAEbE,KAAM,MACRgB,GAASuT,SAAUJ,EAAYnU,gBAC7B4T,kBAAoBT,EAAagB,EAAYnU,cAC7C6T,kBAAoBU,SAASJ,EAAYnU,UAK3C4T,kBAAoBT,EAAagB,EAAY,SAC7CN,kBAAoBU,SAASJ,EAAY,gDAG1BzS,UACZA,GAAc8D,KAAKoO,mBAClBE,iBAAmBA,uDAIbU,EAAaC,OACxB1N,EAAQyN,EAAYE,QACpBzN,EAAQwN,EACRE,EAAYH,EAAY1U,OAAS,SAC1BiH,EAAO4N,GACCnO,OAAOoO,iBAAmB,IAEjC9B,QACX/L,EAAM8N,MACF5N,IAAU0N,GACb1N,KAIK,CAACF,MAAAA,EAAOE,MAAAA,oDAIfb,OAAO0O,YAAatP,KAAKP,MAAM8P,UAC/B3O,OAAO4O,UAAWxP,KAAKP,MAAM0O,YAEzBD,EAAclO,KAAKP,MAAMyO,YACzBA,GACHtN,OAAO6O,eAAgBvB,QAGnBwB,GAAK,kBAAM1I,EAAK8B,eACrBlI,OAAO+O,SAAU,kBAAM3I,EAAK0I,OAC5B9O,OAAO/B,aAEF+B,OAASA,YAETgP,aAAe5P,KAAK6P,mBACpBC,mBAAoB9P,KAAK4P,4DAING,uBAAWC,IAAI,gBAChC,CACNxU,QAFKA,MAEE+I,SAFKA,OAEGC,EAAG,EAAGC,EAAG,oDAKpBwL,kEAIAP,GAAK,aACV3B,wBAAYmC,oBAAqB,oBAAqBlQ,KAAK6N,oDAGxCrF,OACf2H,EAAYnQ,KAAK6P,cACjB7P,KAAK4P,eAAiBO,SACpBP,aAAeO,OACfL,mBAAoBK,IAGtB3H,EAAU4H,eAAiBpQ,KAAKP,MAAM2Q,mBACpC1C,oBAAqB1N,KAAKP,MAAMkO,YAAa3N,KAAKoG,MAAM9K,OAAOE,yCAI3DF,QACLoS,oBAAqB1N,KAAKP,MAAMkO,YAAarS,EAAOE,YACpDuL,SAAU,CAACzL,OAAAA,0CAMZ+U,EAFAzP,EAASZ,KAAKY,OACdW,EAAQX,EAAOW,SAEfX,EAAO0M,MAAMgD,OAEfD,EADGzP,EAAO0M,MAAM5L,YACJd,EAAO0M,MAAM/L,MAAOX,EAAO0M,MAAM5L,YAAc,GAAI6O,MAG/DF,EAAY9O,EAAOX,EAAOc,aAAcT,UAClBuP,SAAWH,EAAUI,OAGpC7P,EAAOc,cACf2O,EAAY9O,EAAOX,EAAOc,YAAc,GAAI6O,MAGzCF,SACHzP,EAAO8P,SAAUL,IACV,+CAKDrQ,KAAKY,OAAO0M,MAAMgD,kDAGNH,OACd9U,EAAW2E,KAAKoG,MAAhB/K,WAEAA,EAMA,KACAsS,EAAc3N,KAAKuO,sBAEvBlT,EAAU,CACTiS,MAAO,CAACpF,UAAWiI,EAAWjU,WAAYb,EAAQiS,MAAMpR,YACxDqF,MAAO,CAAC2G,SAAUiI,EAAWjU,WAAYb,EAAQkG,MAAMrF,aAGxDsC,qBAASG,OAAQtD,EAAQiS,MAAMpR,WAAY,CAC1C0C,QAASuR,EAAY,EAAI,EACzBtU,OAAQ8R,EAAYL,MAAMzR,OAC1BG,SAAU2R,EAAYL,MAAMtR,UAAY,IACxC8N,iBAAkBlH,UAChB/D,QAEHL,qBAASG,OAAQtD,EAAQkG,MAAMrF,WAAY,CAC1C0C,QAASuR,EAAY,EAAI,EACzBtU,OAAQ8R,EAAYpM,MAAM1F,OAC1BG,SAAU2R,EAAYpM,MAAMvF,UAAY,IACxC8N,iBAAkBlH,UAChB/D,aAzBHxD,EAAU,CACTiS,MAAO,CAACpF,UAAWiI,EAAWjU,WAAY,IAAIsC,qBAASC,MAAO0R,EAAY,EAAI,IAC9E5O,MAAO,CAAC2G,SAAUiI,EAAWjU,WAAY,IAAIsC,qBAASC,MAAO0R,EAAY,EAAI,UA0B1EpJ,SAAS,CAAC1L,QAAAA,6BA1OImS,sBAqBD,CAClBG,YAAa5I,UAAUC,OACvBkJ,YAAanJ,UAAU4L,KACvBpB,SAAUxK,UAAU6L,yBAxBDpD,yBA2BE,CACrB+B,SAAU,OACV5B,YAAa,GACTkD,qBACEC,qBA+MR,IAAIC,gBAAkC,YAAhBlO,qBAASC,GAAmBkO,sBAAUC,cAAgB,EAExE7V,SAASgH,uBAAWC,OAAO,CAC9BmM,cAAe,CACd0C,WAAYH,gBACZ7G,KAAM,GAGPhK,UAAW,CACVgK,KAAM,EACN8C,cAAe,MACf1K,SAAU,YCrQNM,QAAwB,QAAhBC,qBAASC,GAEjBqO,qCAgBO1R,uGACLA,IACNA,EAAM2R,GAAGjM,mCAAgB1F,wBAlBCK,kFAuBzBR,6BAACc,kBAAKC,MAAQL,KAAKP,MAAMY,MACxBa,IAAI,KACJZ,SAAW,kBAAMC,EAAKkO,aACtBnL,cAAc,QACZtD,KAAKP,MAAMkE,8DAMVlE,MAAM2R,GAAG9L,WAAYtF,sCAGlB4F,sBACHzB,KAAM,GAENvB,UAAU5C,KAAKqR,gBAEZzK,WAAY,kBAAMI,EAAKlB,QAASF,UAGnC4G,KAAK3G,IAAM7F,KAAKwM,KAAK3G,GAAGC,QAAS,SAAEwL,EAAIC,EAAI/V,EAAO+I,EAAQC,EAAGC,GACjEuC,EAAK7C,IAAM,CACV3I,MAAAA,EAAO+I,OAAAA,EACPC,EAAGA,EAAIoB,EAAOpB,EACdC,EAAGA,EAAImB,EAAOnB,8CAMX4M,UAAW,WAIlB,SAASG,mBAAoB1R,UACrB,SAA2BL,UAGhCH,6BAACD,UAAQoS,cACN,SAAAL,UACD9R,6BAACoS,QAAeD,cACb,SAAApM,UACD/F,6BAACQ,cAAcL,GAAO2R,GAAIA,EAAI/L,QAASA,0BAlExC8L,0BACc,CAElBjV,WAAY6I,UAAU4M,MAAM,CAAE5M,UAAUC,OAAQD,UAAU4L,OAC1DlN,iBAAkBsB,UAAU4L,KAC5B3M,gBAAiBe,UAAUE,OAI3BqC,SAAUvC,UAAU6L,yBAThBO,6BAYiB,IA+DvB,IAAMS,yBAA2BJ,mBAAoBL"}